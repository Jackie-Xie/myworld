-- phpMyAdmin SQL Dump
-- version 4.5.2
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1
-- Generation Time: 2017-02-14 13:04:04
-- 服务器版本： 5.7.9
-- PHP Version: 5.6.16

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `myworld`
--

-- --------------------------------------------------------

--
-- 表的结构 `jk_admin`
--

DROP TABLE IF EXISTS `jk_admin`;
CREATE TABLE IF NOT EXISTS `jk_admin` (
  `adid` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
  `username` varchar(48) NOT NULL DEFAULT '' COMMENT '管理员名',
  `password` varchar(32) NOT NULL DEFAULT '' COMMENT '管理员密码',
  `logintime` int(10) UNSIGNED NOT NULL DEFAULT '0' COMMENT '最近登录时间',
  `loginip` varchar(30) NOT NULL DEFAULT '' COMMENT '最近登录的ip',
  `email` varchar(128) NOT NULL DEFAULT '' COMMENT '管理员邮箱',
  `mobile` char(11) NOT NULL DEFAULT '' COMMENT '管理员手机号码',
  `regtime` int(10) UNSIGNED NOT NULL DEFAULT '0' COMMENT '注册时间',
  `regip` varchar(30) NOT NULL DEFAULT '' COMMENT '注册ip',
  PRIMARY KEY (`adid`),
  UNIQUE KEY `mobile_UNIQUE` (`mobile`),
  UNIQUE KEY `username_UNIQUE` (`username`),
  UNIQUE KEY `email_UNIQUE` (`email`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COMMENT='管理员表';

--
-- 转存表中的数据 `jk_admin`
--

INSERT INTO `jk_admin` (`adid`, `username`, `password`, `logintime`, `loginip`, `email`, `mobile`, `regtime`, `regip`) VALUES
(1, '清风一侠', 'e10adc3949ba59abbe56e057f20f883e', 1466131225, '127.0.0.1', '5976@qq.com', '15757116281', 0, ''),
(3, 'Jackie', 'e10adc3949ba59abbe56e057f20f883e', 1465969601, '127.0.0.1', '597634713@qq.com', '15382347886', 1462726765, '127.0.0.1'),
(4, 'xiequn', 'e10adc3949ba59abbe56e057f20f883e', 1465839802, '127.0.0.1', '555@qq.com', '15225825555', 1462726943, '127.0.0.1'),
(5, '谢群', 'e10adc3949ba59abbe56e057f20f883e', 0, '', '1575711@qq.com', '13616704430', 1462727121, '127.0.0.1'),
(6, '汪敏杰', 'e10adc3949ba59abbe56e057f20f883e', 0, '', '157571@qq.com', '13616704434', 1462727325, '127.0.0.1'),
(7, '刘晗', 'e10adc3949ba59abbe56e057f20f883e', 0, '', '15757@qq.com', '13616704534', 1462727457, '127.0.0.1'),
(8, '郝鹏', 'e10adc3949ba59abbe56e057f20f883e', 0, '', '1577@qq.com', '13616784534', 1462727610, '127.0.0.1');

-- --------------------------------------------------------

--
-- 表的结构 `jk_advice`
--

DROP TABLE IF EXISTS `jk_advice`;
CREATE TABLE IF NOT EXISTS `jk_advice` (
  `advid` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
  `username` varchar(48) NOT NULL DEFAULT '' COMMENT '用户昵称',
  `content` varchar(255) NOT NULL DEFAULT '' COMMENT '内容',
  `email` varchar(128) NOT NULL DEFAULT '' COMMENT '邮箱',
  `time` int(10) UNSIGNED NOT NULL DEFAULT '0' COMMENT '评论时间',
  `userip` varchar(30) NOT NULL DEFAULT '' COMMENT '当前评论的ip',
  `uid` int(10) UNSIGNED NOT NULL COMMENT '所属用户id',
  PRIMARY KEY (`advid`),
  KEY `fk_jk_advice_jk_user1_idx` (`uid`)
) ENGINE=MyISAM AUTO_INCREMENT=24 DEFAULT CHARSET=utf8 COMMENT='建议表';

--
-- 转存表中的数据 `jk_advice`
--

INSERT INTO `jk_advice` (`advid`, `username`, `content`, `email`, `time`, `userip`, `uid`) VALUES
(1, '清风一侠', '加油啊啊[抱抱][抓狂][害羞]', '597634714@qq.com', 1461862709, '127.0.0.1', 0),
(18, '谢群', '[抱抱][抓狂][害羞]123456对对对', '597634713@qq.com', 1466004120, '127.0.0.1', 0),
(17, '谢群', '[抱抱][抓狂][害羞]123456对对对', '597634713@qq.com', 1466004118, '127.0.0.1', 0),
(16, '谢群', '[抱抱][抓狂][害羞]123456，怎么了', '597634713@qq.com', 1466004108, '127.0.0.1', 0),
(15, '谢群', '[抱抱][抓狂][害羞]123456，怎么了', '597634713@qq.com', 1466004103, '127.0.0.1', 0),
(19, '谢群', '[抱抱][抓狂][害羞]123456对对对', '597634713@qq.com', 1466004123, '127.0.0.1', 0),
(20, '谢群', '是多少[嘻嘻][嘻嘻][嘻嘻]', '5@qq.com', 1466004146, '127.0.0.1', 0),
(21, '谢群', '是多少[嘻嘻][嘻嘻][嘻嘻]', '5@qq.com', 1466004177, '127.0.0.1', 0),
(22, '谢群', '是多少[嘻嘻][嘻嘻][嘻嘻]', '5@qq.com', 1466004180, '127.0.0.1', 0),
(23, '谢群', '是多少[嘻嘻][嘻嘻][嘻嘻]', '5@qq.com', 1466004181, '127.0.0.1', 0);

-- --------------------------------------------------------

--
-- 表的结构 `jk_article`
--

DROP TABLE IF EXISTS `jk_article`;
CREATE TABLE IF NOT EXISTS `jk_article` (
  `aid` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
  `title` varchar(200) NOT NULL DEFAULT '' COMMENT '文章标题',
  `content` text NOT NULL COMMENT '文章内容',
  `time` int(10) UNSIGNED NOT NULL DEFAULT '0' COMMENT '发布时间',
  `thumb` varchar(255) NOT NULL DEFAULT '' COMMENT '缩略图地址',
  `summary` varchar(255) NOT NULL DEFAULT '' COMMENT '文章摘要',
  `click` int(10) UNSIGNED NOT NULL DEFAULT '0' COMMENT '点击次数',
  `istop` tinyint(1) UNSIGNED NOT NULL DEFAULT '0' COMMENT '''0''为正常，''1''为置顶',
  `isdel` tinyint(1) UNSIGNED NOT NULL DEFAULT '0' COMMENT '''0''为正常，''1''为进入回收站',
  `cid` int(10) UNSIGNED NOT NULL COMMENT '所属类目id',
  PRIMARY KEY (`aid`),
  KEY `fk_jk_article_jk_category1_idx` (`cid`)
) ENGINE=MyISAM AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COMMENT='文章表';

--
-- 转存表中的数据 `jk_article`
--

INSERT INTO `jk_article` (`aid`, `title`, `content`, `time`, `thumb`, `summary`, `click`, `istop`, `isdel`, `cid`) VALUES
(1, 'MySQL数据库常见操作', '<div id="cnblogs_post_body"><ol>\r\n<li>数据库连接与关闭：mysql -h 服务器主机地址 -u 用户名 -p 用户密码\r\n<p><img src="http://images2015.cnblogs.com/blog/748999/201604/748999-20160406221037437-813435058.png" alt=""></p>\r\n</li>\r\n<li>创建新用户并授权：grant 权限 on 数据库.数据表 to 用户名@登录主机 identified by "密码"</li>\r\n<li>创建数据库：create databases [if not exists] 数据库名;\r\n<p><img src="http://images2015.cnblogs.com/blog/748999/201604/748999-20160406222934531-1545103212.png" alt=""></p>\r\n</li>\r\n<li>删除数据库：drop database [if exists] 数据库名;\r\n<p><img src="http://images2015.cnblogs.com/blog/748999/201604/748999-20160406223017484-228505420.png" alt=""></p>\r\n</li>\r\n<li>显示数据库：show databases;\r\n<p><img src="http://images2015.cnblogs.com/blog/748999/201604/748999-20160406223055281-1472513754.png" alt=""></p>\r\n</li>\r\n<li>打开数据库为当前使用： use 数据库名;<br>\r\n<p><img src="http://images2015.cnblogs.com/blog/748999/201604/748999-20160406223128765-1339059948.png" alt=""></p>\r\n\r\n</li>\r\n<li>创建数据表：\r\n<p><img src="http://images2015.cnblogs.com/blog/748999/201604/748999-20160406223205703-707904262.png" alt=""></p>\r\n\r\n</li>\r\n<li>查看当前数据库有多少表：show tables;\r\n<p><img src="http://images2015.cnblogs.com/blog/748999/201604/748999-20160406223237547-472104133.png" alt=""></p>\r\n\r\n</li>\r\n<li>查看数据表结构：desc 表名称;\r\n<p><img src="http://images2015.cnblogs.com/blog/748999/201604/748999-20160406223311328-1817969441.png" alt=""></p>\r\n\r\n</li>\r\n<li>删除数据表：drop table 表名称;<br>\r\n<p><img src="http://images2015.cnblogs.com/blog/748999/201604/748999-20160406223834859-1933254277.png" alt=""></p>\r\n\r\n</li>\r\n<li>向数据表中插入行记录（INSERT）\r\n<p><img src="http://images2015.cnblogs.com/blog/748999/201604/748999-20160406223446297-326946148.png" alt=""></p>\r\n\r\n</li>\r\n<li>从数据表中查询数据记录（SELECT）\r\n<p><img src="http://images2015.cnblogs.com/blog/748999/201604/748999-20160406223526281-2029006610.png" alt=""></p>\r\n\r\n</li>\r\n<li>更改数据表中存在的记录（UPDATE）\r\n<p><img src="http://images2015.cnblogs.com/blog/748999/201604/748999-20160406223634515-1842983638.png" alt=""></p>\r\n\r\n</li>\r\n<li>删除数据表中的记录（DELETE）</li>\r\n\r\n</ol>\r\n<p>　　　　<img src="http://images2015.cnblogs.com/blog/748999/201604/748999-20160406223724437-1670603356.png" alt=""></p>\r\n<p>&nbsp;</p></div>', 1432051200, '/myworld/Uploads/images/cecq1mwUyT39A.jpg', '数据库连接与关闭：mysql -h 服务器主机地址 -u 用户名 -p 用户密码创建新用户并授权：grant 权限 on 数据库.数据表 to 用户名@登录主机 identified by "密码"创建数据库：create databases [if not exists] 数据库名;删除数据库：drop database [if exists] 数据库名;显示数据库：show databases;打开数据库为当前使用： use 数据库名;', 10, 0, 0, 8),
(8, 'html 5 新特性', '<div id="cnblogs_post_body"><p>现在html 5技术是最新的html标准，掌握html 5已经变得非常重要，以下是我查看相关资料后对html 5 的新特性的总结，方便大家对比学习。<br>html 5的新特性<br>1.取消了一些过时的html 4标签<br>  例如，取消了&lt;font&gt;和&lt;center&gt;这些纯粹显示效果的标签。</p>\r\n<p>2.将内容和展示分离<br>  例如去掉了&lt;u&gt;,&lt;font&gt;,&lt;center&gt;,&lt;strike&gt;这些标签，而在css中展示显示效果。</p>\r\n<p>3.增加了全新的表单输入对象<br>  例如日期，url,Email地址等表单输入对象，还增加了对非拉丁字符的支持，还引入了微数据。</p>\r\n<p>4.增加更加合理的标签<br>  多媒体对象将不在全部绑定在object或embed标签中，而是视频有视频的标签（&lt;<a href="http://www.w3school.com.cn/html5/html_5_video.asp">video</a>&gt;），音频有音频的标签(&lt;<a href="http://www.w3school.com.cn/html5/html5_audio.asp">audio</a>&gt;)。</p>\r\n<p>5.支持音频的播放/录音功能<br>  在播放/录制音频的时候，可能需要用到Flash，quicktime或者java，这也是html 5的功能之一。</p>\r\n<p>6.<a href="http://www.w3school.com.cn/html5/html5_canvas.asp">canvas</a>对象<br>  canvas这个对象可以定义图形，比如图表和其他图像，可给浏览器增加能直接在其上绘制矢量图的能力，这也就意味着可以脱离flash和silverlight，直接在浏览器上显示图形或动画。</p>\r\n<p>7.支持丰富的的2D图片<br>  html 5内嵌了所有复杂的二维图片类型，比目前网站加载图片的方式的速度快的多。</p>\r\n<p>8.支持即时通信功能<br>  html 5中内嵌了基于<a href="http://baike.so.com/doc/6840040-7057314.html">web sockets</a>的即时通信功能，一旦两个用户之间启动了这个功能，就可以保持顺畅的交流。</p>\r\n<p>9.本地数据库<br>  内嵌了一个本地的sql数据库，这样的好处是能加速交互式搜索，缓存以及索引功能，同时一些web程序也将获得很大利处，不需要插件的富动画。</p></div>', 1465997101, '/myworld/Uploads/articles/576156d5c0f21.jpg', '现在html 5技术是最新的html标准，掌握html 5已经变得非常重要，以下是我查看相关资料后对html 5 的新特性的总结，方便大家对比学习。', 10, 1, 1, 5),
(9, 'html 5 新特性', '&lt;p&gt;现在html 5技术是最新的html标准，掌握html 5已经变得非常重要，以下是我查看相关资料后对html 5 的新特性的总结，方便大家对比学习。&lt;br/&gt;html 5的新特性&lt;br/&gt;1.取消了一些过时的html 4标签&lt;br/&gt; &amp;nbsp;例如，取消了&amp;lt;font&amp;gt;和&amp;lt;center&amp;gt;这些纯粹显示效果的标签。&lt;/p&gt;&lt;p&gt;2.将内容和展示分离&lt;br/&gt; &amp;nbsp;例如去掉了&amp;lt;u&amp;gt;,&amp;lt;font&amp;gt;,&amp;lt;center&amp;gt;,&amp;lt;strike&amp;gt;这些标签，而在css中展示显示效果。&lt;/p&gt;&lt;p&gt;3.增加了全新的表单输入对象&lt;br/&gt; &amp;nbsp;例如日期，url,Email地址等表单输入对象，还增加了对非拉丁字符的支持，还引入了微数据。&lt;/p&gt;&lt;p&gt;4.增加更加合理的标签&lt;br/&gt; &amp;nbsp;多媒体对象将不在全部绑定在object或embed标签中，而是视频有视频的标签（&amp;lt;&lt;a href=&quot;http://www.w3school.com.cn/html5/html_5_video.asp&quot;&gt;video&lt;/a&gt;&amp;gt;），音频有音频的标签(&amp;lt;&lt;a href=&quot;http://www.w3school.com.cn/html5/html5_audio.asp&quot;&gt;audio&lt;/a&gt;&amp;gt;)。&lt;/p&gt;&lt;p&gt;5.支持音频的播放/录音功能&lt;br/&gt; &amp;nbsp;在播放/录制音频的时候，可能需要用到Flash，quicktime或者java，这也是html 5的功能之一。&lt;/p&gt;&lt;p&gt;6.&lt;a href=&quot;http://www.w3school.com.cn/html5/html5_canvas.asp&quot;&gt;canvas&lt;/a&gt;对象&lt;br/&gt; &amp;nbsp;canvas这个对象可以定义图形，比如图表和其他图像，可给浏览器增加能直接在其上绘制矢量图的能力，这也就意味着可以脱离flash和silverlight，直接在浏览器上显示图形或动画。&lt;/p&gt;&lt;p&gt;7.支持丰富的的2D图片&lt;br/&gt; &amp;nbsp;html 5内嵌了所有复杂的二维图片类型，比目前网站加载图片的方式的速度快的多。&lt;/p&gt;&lt;p&gt;8.支持即时通信功能&lt;br/&gt; &amp;nbsp;html 5中内嵌了基于&lt;a href=&quot;http://baike.so.com/doc/6840040-7057314.html&quot;&gt;web sockets&lt;/a&gt;的即时通信功能，一旦两个用户之间启动了这个功能，就可以保持顺畅的交流。&lt;/p&gt;&lt;p&gt;9.本地数据库&lt;br/&gt; &amp;nbsp;内嵌了一个本地的sql数据库，这样的好处是能加速交互式搜索，缓存以及索引功能，同时一些web程序也将获得很大利处，不需要插件的富动画。&lt;/p&gt;', 1465997139, '/myworld/Uploads/articles/576156d5c0f21.jpg', '现在html 5技术是最新的html标准，掌握html 5已经变得非常重要，以下是我查看相关资料后对html 5 的新特性的总结，方便大家对比学习。', 10, 0, 1, 5),
(2, 'JavaScript基础4——关于语句流程控制（分支语句、循环语句等）', '<div id="cnblogs_post_body"><ul>\r\n<li>\r\n<h1><span style="font-size: 15px;"><strong><span style="font-family: Microsoft YaHei;">分支语句 </span></strong></span></h1>\r\n</li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">(1)if...else...语句，基本格式分三种，如下</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 2</span>     <span style="color: #0000ff;">var</span> i=50<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 3</span>     <span style="color: #008000;">//</span><span style="color: #008000;">if语句</span>\r\n<span style="color: #008080;"> 4</span>        <span style="color: #0000ff;">if</span><span style="color: #000000;"> (条件)\r\n</span><span style="color: #008080;"> 5</span> <span style="color: #000000;">       {\r\n</span><span style="color: #008080;"> 6</span> <span style="color: #000000;">             条件成立时执行代码\r\n</span><span style="color: #008080;"> 7</span> <span style="color: #000000;">       } \r\n</span><span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span>     <span style="color: #008000;">//</span><span style="color: #008000;">if...else语句</span>\r\n<span style="color: #008080;">10</span>        <span style="color: #0000ff;">if</span><span style="color: #000000;"> (条件)\r\n</span><span style="color: #008080;">11</span> <span style="color: #000000;">       {\r\n</span><span style="color: #008080;">12</span> <span style="color: #000000;">          条件成立时执行此代码\r\n</span><span style="color: #008080;">13</span> <span style="color: #000000;">        }\r\n</span><span style="color: #008080;">14</span>        <span style="color: #0000ff;">else</span>\r\n<span style="color: #008080;">15</span> <span style="color: #000000;">       {\r\n</span><span style="color: #008080;">16</span> <span style="color: #000000;">          条件不成立时执行此代码\r\n</span><span style="color: #008080;">17</span> <span style="color: #000000;">        }\r\n</span><span style="color: #008080;">18</span> \r\n<span style="color: #008080;">19</span>      <span style="color: #008000;">//</span><span style="color: #008000;">if...else if...else if...else...语句 </span>\r\n<span style="color: #008080;">20</span>         <span style="color: #0000ff;">if</span><span style="color: #000000;"> (条件1)\r\n</span><span style="color: #008080;">21</span> <span style="color: #000000;">        {\r\n</span><span style="color: #008080;">22</span> <span style="color: #000000;">            条件1成立时执行代码\r\n</span><span style="color: #008080;">23</span> <span style="color: #000000;">        }\r\n</span><span style="color: #008080;">24</span>         <span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span><span style="color: #000000;"> (条件2)\r\n</span><span style="color: #008080;">25</span> <span style="color: #000000;">        {\r\n</span><span style="color: #008080;">26</span> <span style="color: #000000;">            条件2成立时执行代码\r\n</span><span style="color: #008080;">27</span> <span style="color: #000000;">        }\r\n</span><span style="color: #008080;">28</span>         <span style="color: #0000ff;">else</span>\r\n<span style="color: #008080;">29</span> <span style="color: #000000;">        {\r\n</span><span style="color: #008080;">30</span> <span style="color: #000000;">            条件1和条件2均不成立时执行代码\r\n</span><span style="color: #008080;">31</span> <span style="color: #000000;">        }\r\n</span><span style="color: #008080;">32</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">(2)switch语句</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 2</span>     <span style="color: #0000ff;">var</span> i=2<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 3</span>      <span style="color: #0000ff;">switch</span><span style="color: #000000;">(i)\r\n</span><span style="color: #008080;"> 4</span> <span style="color: #000000;">    {\r\n</span><span style="color: #008080;"> 5</span>    <span style="color: #0000ff;">case</span> 1<span style="color: #000000;">:\r\n</span><span style="color: #008080;"> 6</span>      document.write("i等于1"<span style="color: #000000;">)\r\n</span><span style="color: #008080;"> 7</span>      <span style="color: #0000ff;">break</span>\r\n<span style="color: #008080;"> 8</span>    <span style="color: #0000ff;">case</span> 2<span style="color: #000000;">:\r\n</span><span style="color: #008080;"> 9</span>      document.write("i等于2"<span style="color: #000000;">)\r\n</span><span style="color: #008080;">10</span>      <span style="color: #0000ff;">break</span>\r\n<span style="color: #008080;">11</span>    <span style="color: #0000ff;">case</span> 3<span style="color: #000000;">:\r\n</span><span style="color: #008080;">12</span>      document.write("i等于3"<span style="color: #000000;">)\r\n</span><span style="color: #008080;">13</span>      <span style="color: #0000ff;">break</span>\r\n<span style="color: #008080;">14</span>    <span style="color: #0000ff;">default</span><span style="color: #000000;">:\r\n</span><span style="color: #008080;">15</span>      document.write("错误"<span style="color: #000000;">)\r\n</span><span style="color: #008080;">16</span> <span style="color: #000000;">     }\r\n</span><span style="color: #008080;">17</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>\r\n<h1><strong><span style="font-family: Microsoft YaHei; font-size: 15px;">循环语句</span></strong></h1>\r\n</li>\r\n</ul>\r\n<p style="margin-left: 30px;">(1)for循环（包括for语句和for...in语句）</p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> <span style="color: #008000;">/*</span>\r\n<span style="color: #008080;"> 2</span> <span style="color: #008000;">格式1：\r\n</span><span style="color: #008080;"> 3</span> <span style="color: #008000;">for (变量=开始值;变量&lt;=结束值;变量=变量+步进值)\r\n</span><span style="color: #008080;"> 4</span> <span style="color: #008000;">{\r\n</span><span style="color: #008080;"> 5</span> <span style="color: #008000;">    需执行的代码\r\n</span><span style="color: #008080;"> 6</span> <span style="color: #008000;">}\r\n</span><span style="color: #008080;"> 7</span> <span style="color: #008000;">*/</span>\r\n<span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">10</span>     <span style="color: #0000ff;">for</span> (sProp <span style="color: #0000ff;">in</span><span style="color: #000000;"> window)\r\n</span><span style="color: #008080;">11</span> <span style="color: #000000;">     {\r\n</span><span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span>          document.write(sProp+"&lt;br /&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">显示 window 对象的所有属性</span>\r\n<span style="color: #008080;">14</span> \r\n<span style="color: #008080;">15</span> <span style="color: #000000;">     }\r\n</span><span style="color: #008080;">16</span> &lt;/script&gt;\r\n<span style="color: #008080;">17</span> \r\n<span style="color: #008080;">18</span> <span style="color: #008000;">/*</span>\r\n<span style="color: #008080;">19</span> <span style="color: #008000;">格式2：\r\n</span><span style="color: #008080;">20</span> <span style="color: #008000;">for (property in expression)\r\n</span><span style="color: #008080;">21</span> <span style="color: #008000;">{\r\n</span><span style="color: #008080;">22</span> <span style="color: #008000;">    需执行的代码\r\n</span><span style="color: #008080;">23</span> <span style="color: #008000;">}\r\n</span><span style="color: #008080;">24</span> <span style="color: #008000;">*/</span>\r\n<span style="color: #008080;">25</span> \r\n<span style="color: #008080;">26</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">27</span>     <span style="color: #0000ff;">var</span> array=<span style="color: #0000ff;">new</span> Array(1,2,3,4,5,6,7,8,9,0,-3<span style="color: #000000;">);\r\n</span><span style="color: #008080;">28</span> <span style="color: #008000;">//</span><span style="color: #008000;">  var array=[1,2,3,4,5,6,7,8,9,0,-3]; //这样也行</span>\r\n<span style="color: #008080;">29</span>      <span style="color: #0000ff;">for</span> (i <span style="color: #0000ff;">in</span><span style="color: #000000;"> array)\r\n</span><span style="color: #008080;">30</span> <span style="color: #000000;">     {\r\n</span><span style="color: #008080;">31</span>          document.write(array[i]+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">显示数组内容</span>\r\n<span style="color: #008080;">32</span> <span style="color: #000000;">     }\r\n</span><span style="color: #008080;">33</span> &lt;/script&gt; </pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;">奉上截图：</p>\r\n<p style="margin-left: 90px;"><img src="http://images2015.cnblogs.com/blog/748999/201511/748999-20151106172844680-150697535.png" alt=""></p>\r\n<p style="margin-left: 30px;">(2)while循环</p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> <span style="color: #008000;">/*</span>\r\n<span style="color: #008080;"> 2</span> <span style="color: #008000;">格式1：\r\n</span><span style="color: #008080;"> 3</span> <span style="color: #008000;">while (expression)\r\n</span><span style="color: #008080;"> 4</span> <span style="color: #008000;">{\r\n</span><span style="color: #008080;"> 5</span> <span style="color: #008000;">需执行的代码\r\n</span><span style="color: #008080;"> 6</span> <span style="color: #008000;">}\r\n</span><span style="color: #008080;"> 7</span> <span style="color: #008000;">*/</span>\r\n<span style="color: #008080;"> 8</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 9</span> <span style="color: #0000ff;">var</span> i=10\r\n<span style="color: #008080;">10</span> <span style="color: #0000ff;">while</span> (i&gt;0<span style="color: #000000;">)\r\n</span><span style="color: #008080;">11</span> <span style="color: #000000;">{\r\n</span><span style="color: #008080;">12</span>      document.write(i+"&lt;br /&gt;"<span style="color: #000000;">);\r\n</span><span style="color: #008080;">13</span>      i--<span style="color: #000000;">;\r\n</span><span style="color: #008080;">14</span> <span style="color: #000000;">}\r\n</span><span style="color: #008080;">15</span> &lt;/script&gt;\r\n<span style="color: #008080;">16</span> \r\n<span style="color: #008080;">17</span> <span style="color: #008000;">/*</span>\r\n<span style="color: #008080;">18</span> <span style="color: #008000;">格式2：\r\n</span><span style="color: #008080;">19</span> <span style="color: #008000;">do\r\n</span><span style="color: #008080;">20</span> <span style="color: #008000;">{\r\n</span><span style="color: #008080;">21</span> <span style="color: #008000;">需执行的代码\r\n</span><span style="color: #008080;">22</span> <span style="color: #008000;">} while (条件);\r\n</span><span style="color: #008080;">23</span> <span style="color: #008000;">*/</span>\r\n<span style="color: #008080;">24</span> \r\n<span style="color: #008080;">25</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">26</span> <span style="color: #0000ff;">var</span> i=10\r\n<span style="color: #008080;">27</span> <span style="color: #0000ff;">do</span>\r\n<span style="color: #008080;">28</span> <span style="color: #000000;">{\r\n</span><span style="color: #008080;">29</span>      document.write(i+"&lt;br /&gt;"<span style="color: #000000;">);\r\n</span><span style="color: #008080;">30</span>      i--<span style="color: #000000;">;\r\n</span><span style="color: #008080;">31</span> }<span style="color: #0000ff;">while</span> (i&gt;0<span style="color: #000000;">)\r\n</span><span style="color: #008080;">32</span> \r\n<span style="color: #008080;">33</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;">(3)使用break和continue退出循环</p>\r\n<p style="margin-left: 30px;">break 命令可以终止循环的运行，然后继续执行循环之后的代码（如果循环之后有代码的话）。continue 命令会终止当前的循环，然后从下一个值继续运行。</p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> <span style="color: #008000;">//</span><span style="color: #008000;">break语句</span>\r\n<span style="color: #008080;"> 2</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 3</span> <span style="color: #0000ff;">var</span> iNum = 0<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 4</span> <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">var</span> i=1; i&lt;10; i++<span style="color: #000000;">) {\r\n</span><span style="color: #008080;"> 5</span>   <span style="color: #0000ff;">if</span> (i % 5 == 0<span style="color: #000000;">) {\r\n</span><span style="color: #008080;"> 6</span>     <span style="color: #0000ff;">break</span><span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 7</span> <span style="color: #000000;">  }\r\n</span><span style="color: #008080;"> 8</span>   iNum++<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 9</span> <span style="color: #000000;">}\r\n</span><span style="color: #008080;">10</span> alert(iNum);    <span style="color: #008000;">//</span><span style="color: #008000;">输出 "4"</span>\r\n<span style="color: #008080;">11</span> &lt;/script&gt;\r\n<span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span> <span style="color: #008000;">//</span><span style="color: #008000;">continue语句</span>\r\n<span style="color: #008080;">14</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">15</span> <span style="color: #0000ff;">var</span> iNum = 0<span style="color: #000000;">;\r\n</span><span style="color: #008080;">16</span> <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">var</span> i=1; i&lt;10; i++<span style="color: #000000;">) {\r\n</span><span style="color: #008080;">17</span>   <span style="color: #0000ff;">if</span> (i % 5 == 0<span style="color: #000000;">) {\r\n</span><span style="color: #008080;">18</span>     <span style="color: #0000ff;">continue</span><span style="color: #000000;">;\r\n</span><span style="color: #008080;">19</span> <span style="color: #000000;">  }\r\n</span><span style="color: #008080;">20</span>   iNum++<span style="color: #000000;">;\r\n</span><span style="color: #008080;">21</span> <span style="color: #000000;">}\r\n</span><span style="color: #008080;">22</span> alert(iNum);    <span style="color: #008000;">//</span><span style="color: #008000;">输出 "8"</span>\r\n<span style="color: #008080;">23</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;"> (4)*with 语句用于设置代码在特定对象中的作用域。提示：with 语句是运行缓慢的代码块，尤其是在已设置了属性值时。大多数情况下，如果可能，最好避免使用它。</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;">1</span> <span style="color: #008000;">//</span><span style="color: #008000;">with语句</span>\r\n<span style="color: #008080;">2</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">3</span> 1 <span style="color: #0000ff;">var</span> sMessage = "hello"<span style="color: #000000;">;\r\n</span><span style="color: #008080;">4</span> 2 <span style="color: #0000ff;">with</span><span style="color: #000000;">(sMessage) {\r\n</span><span style="color: #008080;">5</span> 3   alert(toUpperCase());  <span style="color: #008000;">//</span><span style="color: #008000;">输出 "HELLO"</span>\r\n<span style="color: #008080;">6</span> 4<span style="color: #000000;"> }\r\n</span><span style="color: #008080;">7</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 15px;"><strong>异常处理<br></strong></span></li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">(1)try...catch...异常处理</span> </p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> <span style="color: #008000;">/*</span>\r\n<span style="color: #008080;"> 2</span> <span style="color: #008000;">try\r\n</span><span style="color: #008080;"> 3</span> <span style="color: #008000;">{\r\n</span><span style="color: #008080;"> 4</span> <span style="color: #008000;">   //在此运行代码\r\n</span><span style="color: #008080;"> 5</span> <span style="color: #008000;">}\r\n</span><span style="color: #008080;"> 6</span> <span style="color: #008000;">catch(err)\r\n</span><span style="color: #008080;"> 7</span> <span style="color: #008000;">{\r\n</span><span style="color: #008080;"> 8</span> <span style="color: #008000;">   //在此处理错误\r\n</span><span style="color: #008080;"> 9</span> <span style="color: #008000;">}\r\n</span><span style="color: #008080;">10</span> <span style="color: #008000;">*/</span>\r\n<span style="color: #008080;">11</span> \r\n<span style="color: #008080;">12</span> <span style="color: #008000;">//</span><span style="color: #008000;">try...catch...例子</span>\r\n<span style="color: #008080;">13</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">14</span>     <span style="color: #0000ff;">var</span> txt=""\r\n<span style="color: #008080;">15</span>     <span style="color: #0000ff;">try</span>\r\n<span style="color: #008080;">16</span> <span style="color: #000000;">    {\r\n</span><span style="color: #008080;">17</span>          adddlert("Welcome guest!");<span style="color: #008000;">//</span><span style="color: #008000;">alert拼写错误</span>\r\n<span style="color: #008080;">18</span> <span style="color: #000000;">     }\r\n</span><span style="color: #008080;">19</span>      <span style="color: #0000ff;">catch</span><span style="color: #000000;">(err)\r\n</span><span style="color: #008080;">20</span> <span style="color: #000000;">     {\r\n</span><span style="color: #008080;">21</span>          txt+="错误描述: " + err.description + "\\n\\n"<span style="color: #000000;">;\r\n</span><span style="color: #008080;">22</span> <span style="color: #000000;">         alert(txt);\r\n</span><span style="color: #008080;">23</span> <span style="color: #000000;">     }\r\n</span><span style="color: #008080;">24</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">(2)Throw声明</span>&nbsp; </p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">&nbsp;&nbsp; throw(exception); exception可以是字符串、整数、逻辑值或者对象。</span> </p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 2</span>     <span style="color: #0000ff;">var</span> x=prompt("输入一个0到10的数值:","100"<span style="color: #000000;">);\r\n</span><span style="color: #008080;"> 3</span>      <span style="color: #0000ff;">try</span>\r\n<span style="color: #008080;"> 4</span> <span style="color: #000000;">    {\r\n</span><span style="color: #008080;"> 5</span>          <span style="color: #0000ff;">if</span>(x&gt;10<span style="color: #000000;">)\r\n</span><span style="color: #008080;"> 6</span>               <span style="color: #0000ff;">throw</span> "Err1"<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 7</span>          <span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span>(x&lt;0<span style="color: #000000;">)\r\n</span><span style="color: #008080;"> 8</span>               <span style="color: #0000ff;">throw</span> "Err2"<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 9</span> <span style="color: #000000;">     }\r\n</span><span style="color: #008080;">10</span>      <span style="color: #0000ff;">catch</span><span style="color: #000000;">(er)\r\n</span><span style="color: #008080;">11</span> <span style="color: #000000;">     {\r\n</span><span style="color: #008080;">12</span>          <span style="color: #0000ff;">if</span>(er=="Err1"<span style="color: #000000;">)\r\n</span><span style="color: #008080;">13</span>               alert("值大了！"<span style="color: #000000;">);\r\n</span><span style="color: #008080;">14</span>          <span style="color: #0000ff;">if</span>(er == "Err2"<span style="color: #000000;">)\r\n</span><span style="color: #008080;">15</span>               alert("值小了！"<span style="color: #000000;">) ;\r\n</span><span style="color: #008080;">16</span> <span style="color: #000000;">     }\r\n</span><span style="color: #008080;">17</span>      document.write("您输入的是："+<span style="color: #000000;">x);\r\n</span><span style="color: #008080;">18</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">(3)onerror事件</span> </p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">&nbsp;可以使用 onerror 事件捕获网页中的错误。（chrome、opera、safari 浏览器不支持,不建议使用）</span> </p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> <span style="color: #008000;">//</span><span style="color: #008000;">onerror 语法</span>\r\n<span style="color: #008080;"> 2</span> <span style="color: #008000;">/*</span>\r\n<span style="color: #008080;"> 3</span> <span style="color: #008000;">onerror=handleErrfunction handleErr(msg,url,l)\r\n</span><span style="color: #008080;"> 4</span> <span style="color: #008000;">{\r\n</span><span style="color: #008080;"> 5</span> <span style="color: #008000;">//Handle the error here\r\n</span><span style="color: #008080;"> 6</span> <span style="color: #008000;">  return true or false\r\n</span><span style="color: #008080;"> 7</span> <span style="color: #008000;">}\r\n</span><span style="color: #008080;"> 8</span> <span style="color: #008000;">浏览器是否显示标准的错误消息，取决于onerror的返回值。如果返回值为 false，则在控制台(JavaScript console)中显示错误消息。反之则不会\r\n</span><span style="color: #008080;"> 9</span> <span style="color: #008000;">*/</span>\r\n<span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span> <span style="color: #008000;">//</span><span style="color: #008000;"> 例子</span>\r\n<span style="color: #008080;">12</span> &lt;head&gt;\r\n<span style="color: #008080;">13</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">14</span>      onerror=<span style="color: #000000;">handleErr;\r\n</span><span style="color: #008080;">15</span>      <span style="color: #0000ff;">var</span> txt=""<span style="color: #000000;">;\r\n</span><span style="color: #008080;">16</span>      <span style="color: #0000ff;">function</span><span style="color: #000000;"> handleErr(msg,url,l)\r\n</span><span style="color: #008080;">17</span> <span style="color: #000000;">     {\r\n</span><span style="color: #008080;">18</span>          txt+="错误信息: " + msg + "\\n"<span style="color: #000000;">;\r\n</span><span style="color: #008080;">19</span>          txt+="错误文件: " + url + "\\n"<span style="color: #000000;">;\r\n</span><span style="color: #008080;">20</span>          txt+="错误行数: " + l + "\\n\\n"<span style="color: #000000;">;\r\n</span><span style="color: #008080;">21</span> <span style="color: #000000;">         alert(txt);\r\n</span><span style="color: #008080;">22</span>          <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">true</span><span style="color: #000000;">;\r\n</span><span style="color: #008080;">23</span> <span style="color: #000000;">     }\r\n</span><span style="color: #008080;">24</span>      <span style="color: #0000ff;">function</span><span style="color: #000000;"> err()\r\n</span><span style="color: #008080;">25</span> <span style="color: #000000;">     {\r\n</span><span style="color: #008080;">26</span>          adddlert("Welcome guest!");<span style="color: #008000;">//</span><span style="color: #008000;">alert拼写错误</span>\r\n<span style="color: #008080;">27</span> <span style="color: #000000;">     }\r\n</span><span style="color: #008080;">28</span> &lt;/script&gt;\r\n<span style="color: #008080;">29</span> &lt;/head&gt;\r\n<span style="color: #008080;">30</span> \r\n<span style="color: #008080;">31</span> &lt;body&gt;\r\n<span style="color: #008080;">32</span> &lt;input type="button" value="View message" onclick="err()" /&gt;\r\n<span style="color: #008080;">33</span> &lt;/body&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>\r\n<h1><span style="font-family: Microsoft YaHei; font-size: 15px;"><strong>控制结构思维导图</strong></span></h1>\r\n</li>\r\n</ul>\r\n<p><img src="http://images2015.cnblogs.com/blog/748999/201511/748999-20151106174638399-530999452.gif" alt=""></p>\r\n<p>&nbsp;</p>\r\n<p style="margin-left: 30px;">&nbsp;</p></div>', 1400515200, '/myworld/Uploads/images/09563T1A-4.jpg', ' 分支语句 (1)if...else...语句，基本格式分三种，如下 1 (2)switch语句 1 循环语句(1)for循环（包括for语句和for...in语句） 1 /* 2 格式1： 3 for (变量=开始值;变量13 29 30 31 32 33 控制结构思维导图', 20, 1, 0, 2),
(3, 'JavaScript基础1——基本概念', '<div id="cnblogs_post_body"><ul>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 15px;"><strong>关于JS的概念</strong></span></li>\r\n</ul>\r\n<ol>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">JavaScript 是一种弱类型语言。</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">JavaScript 是一种客户端脚本语言（脚本语言是一种轻量级的编程语言）。</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">JavaScript是基于对象的。(因为面向对象需要具有封装、继承、多态的特征)</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">JavaScript是一门解释型的语言，浏览器充当解释器（就是说，代码执行不进行预编译）。</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">JavaScript执行引擎并不是一行一行的执行，而是一段一段的分析执行。</span></li>\r\n</ol>\r\n<ul>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 15px;"><strong>JS的引入与放置位置</strong></span></li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">1.引入方式一：</span>使用&lt;script&gt;标签,直接在HTML代码里加入JavaScript代码；</p>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-family: Microsoft YaHei;">2.引入方式二：</span></span>使用&lt;script src=”XXX.js”&gt;调用外部的JavaScript(.js)文件；</p>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<div class="cnblogs_code" style="margin-left: 30px;">\r\n<pre>&lt;script src=”js/jquery.js”&gt;&lt;/script&gt;</pre>\r\n</div>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<p style="margin-left: 30px;">注意：外部的.js文件里面直接写js代码<span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-family: Microsoft YaHei;">，</span></span>不要在开头和结尾加标签； </p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-family: Microsoft YaHei;">3.引入方式三：在html标签的事件中，超级链接里；<br></span></span></p>\r\n<div class="cnblogs_code" style="margin-left: 30px;">\r\n<pre>&lt;button onclick="javaScript语言"&gt;&lt;/button&gt;\r\n&lt;a href="javascript:alert(''aa'');alert(''bb'')"&gt;点击&lt;/a&gt;</pre>\r\n</div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-family: Microsoft YaHei;">4.错误方式：调用外部的JavaScript(.js)文件，就不能再在里面写；</span></span></p>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<div class="cnblogs_code" style="margin-left: 30px;">\r\n<pre>&lt;script src=”xxx.js”&gt;\r\n<span style="color: #0000ff;">var</span> _name =<span style="color: #000000;">’张三’；\r\nalert(_name)；\r\n</span>&lt;/script&gt;</pre>\r\n</div>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">5.多段script的执行顺序</span></p>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 12px;">&nbsp;&nbsp;<span style="font-size: 13px;"> 按引入顺序，逐段执行（思考为什么N多页面吧JS写在最后？）</span></span></p>\r\n<p style="margin-left: 30px;"><span style="font-size: 13px;"><span style="font-family: Microsoft YaHei;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a.</span><span style="font-family: Microsoft YaHei;">防止页面一次出现，等待时间较长，不符合人的阅读习惯</span></span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.防止js语言已经出现，但是变量在js之后没有在内存中读取，导致js找不到变量发生错误</span> </p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">6.JS代码放的位置：</span>页面head和body都可以写</p>\r\n<p style="margin-left: 30px;">&nbsp; 页面中的脚本会在页面载入浏览器后立即执行，我们并不总希望这样。有时，我们希望当页面载入时执行脚本；而另外的时候，我们则希望当用户触发事件时才执行脚本。</p>\r\n<p style="margin-left: 30px;">&nbsp;&nbsp;&nbsp; a.把JavaScript代码放到HTML&lt;body&gt;部分</p>\r\n<p style="margin-left: 30px;">&nbsp;&nbsp;&nbsp; 把页面载入时就需要执行的JavaScript代码放到&lt;body&gt;标签之间。这是一种规范，建议这样做。</p>\r\n<p style="margin-left: 30px;">&nbsp;&nbsp;&nbsp; b.把JavaScript代码放到HTML&lt;head&gt;部分</p>\r\n<p style="margin-left: 30px;">&nbsp;&nbsp;&nbsp; 把当脚本被调用时，或当事件被触发时才会执行的JavaScript代码放到&lt;head&gt;标签之中，这样就可以确保在调用JavaScript之前就载入了它。这是一种规范，建议这样做。</p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">7.如何与老浏览器打交道</span> </p>\r\n<p style="margin-left: 30px;">&nbsp;&nbsp; 那些不支持 JavaScript 的浏览器会把脚本作为页面的内容来显示。为了防止这种情况发生，我们可以使用这样的 HTML 注释标签：</p>\r\n<div class="cnblogs_code" style="margin-left: 30px;"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;html&gt;\r\n<span style="color: #008080;"> 2</span> &lt;body&gt;\r\n<span style="color: #008080;"> 3</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 4</span> &lt;!--<span style="color: #008000;">//</span><span style="color: #008000;">HTML注释</span>\r\n<span style="color: #008080;"> 5</span> document.write("Hello World!");<span style="color: #008000;">//</span><span style="color: #008000;">JavaScript代码</span>\r\n<span style="color: #008080;"> 6</span> <span style="color: #008000;">//</span><span style="color: #008000;">--&gt;//JavaScript注释</span>\r\n<span style="color: #008080;"> 7</span> &lt;/script&gt;\r\n<span style="color: #008080;"> 8</span> &lt;/body&gt;\r\n<span style="color: #008080;"> 9</span> &lt;/html&gt;\r\n<span style="color: #008080;">10</span> <span style="color: #008000;">/*</span><span style="color: #008000;">注释行末尾的两个正斜杠是 JavaScript 的注释符号，它会阻止 JavaScript 编译器对这一行的编译.</span><span style="color: #008000;">*/</span></pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<ul>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 15px;"><strong>JS的语句与注释</strong></span></li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">(1)JavaScript语句结束符</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">&nbsp;&nbsp; 通常要在每行语句结尾加上一个分号(;)，但是根据JavaScript标准语句结尾的分号是可选的，浏览器会把行末作为语句的结尾。</span> </p>\r\n<div class="cnblogs_code" style="margin-left: 30px;">\r\n<pre><span style="color: #008080;">1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">2</span>      document.write("语句1&lt;br&gt;"<span style="color: #000000;">)\r\n</span><span style="color: #008080;">3</span>      document.write("语句2&lt;br&gt;"<span style="color: #000000;">)\r\n</span><span style="color: #008080;">4</span> &lt;/script&gt;</pre>\r\n</div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">(2)JavaScript代码块</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">&nbsp;&nbsp; JavaScript可以分批的组合起来，使用“{”“}”把多条语句括起来组成代码块。代码块的作用是一并的执行语句序列。 <br></span></p>\r\n<div class="cnblogs_code" style="margin-left: 30px;"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;">1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">2</span> <span style="color: #000000;">     {\r\n</span><span style="color: #008080;">3</span>          document.write("&lt;h1&gt;This is a header&lt;/h1&gt;"<span style="color: #000000;">);\r\n</span><span style="color: #008080;">4</span>          document.write("&lt;p&gt;This is a paragraph&lt;/p&gt;"<span style="color: #000000;">);\r\n</span><span style="color: #008080;">5</span>          document.write("&lt;p&gt;This is another paragraph&lt;/p&gt;"<span style="color: #000000;">);\r\n</span><span style="color: #008080;">6</span> <span style="color: #000000;">     }\r\n</span><span style="color: #008080;">7</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">(3)JavaScript注释</span></p>\r\n<div class="cnblogs_code" style="margin-left: 30px;"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;">1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">2</span> \r\n<span style="color: #008080;">3</span>      document.write("JavaScript注释！");<span style="color: #008000;">//</span><span style="color: #008000;">双斜杠表示行注释（第一种）</span>\r\n<span style="color: #008080;">4</span>      <span style="color: #008000;">/*</span>\r\n<span style="color: #008080;">5</span> <span style="color: #008000;">     第二种，块注释\r\n</span><span style="color: #008080;">6</span>      <span style="color: #008000;">*/</span>\r\n<span style="color: #008080;">7</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<ul>\r\n<li><strong><span style="font-family: Microsoft YaHei; font-size: 15px;">关于延迟脚本与异步脚本</span></strong></li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-size: 13px; font-family: Microsoft YaHei;"><strong>延迟脚本</strong></span></p>\r\n<p style="margin-left: 30px;" align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="font-family: Microsoft YaHei; font-size: 13px;">HTML4.0.1中定义了defer属性，它的用途是表明脚本在执行时不会影响页面的构造。也就是说，脚本会延迟到整个页面都解析完毕后再执行。 因此，在&lt;script&gt;元素中设置defer属性，相当于告诉浏览器立即下载，但延迟执行。在XHTML文档中，要把defer属性设置为defer=“defer"。</span></p>\r\n<p style="margin-left: 30px;" align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>异步脚本</strong></span></p>\r\n<p style="margin-left: 30px;" align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: 13px; font-family: Microsoft YaHei;">&nbsp; html5为&lt;script&gt;定义了async 属性。整个属性与defer属性类似，都用于改变处理脚本的行为。同样，与defer类似，async只适用于外部脚本文件，并告诉浏览器立即下载文件。 但与defer不同的是，标记为async的脚本并不保证按照指定他们的先后顺序执行。指定async的目的是不让页面等待脚本文件下载和执行，从而异步加载页面其他内容。因此，建议异步脚本不要再加载期间操作DOM。</span></p>\r\n<ul>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 15px;"><strong>JS与DOM的关系</strong></span></li>\r\n</ul>\r\n<p>&nbsp;</p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">浏览器有渲染html代码的功能，把html源码在内存里形成一个DOM对象，就是文档对象。浏览器内部有一个JS的<strong>解释器</strong><strong>/</strong><strong>执行器</strong><strong>/</strong><strong>引擎</strong>、如chrome 用V8引擎。我们在html里写一个JS代码，JS代码被引擎所执行，而执行的结果就是对DOM的操作。而对学习DOM操作的结果，就是我们常常看到的特效，比如图片漂浮，文字变色等。学习Javascript要注意：</span></p>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<ol>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">JS语言本身的语法</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">DOM对象（把body,div,p等节点树看成一个对象）</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">BOM对象（把浏览器的地址栏，历史记录，DOM等庄子啊一个对象）</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">浏览器是宿主，但JS的宿主不限于浏览器，也可以是服务器端</span></li>\r\n</ol>\r\n<p>&nbsp;</p></div>', 1404057600, '/myworld/Uploads/images/09563T1A-4.jpg', '关于JS的概念\r\nJavaScript 是一种弱类型语言。\r\nJavaScript 是一种客户端脚本语言（脚本语言是一种轻量级的编程语言）。\r\nJavaScript是基于对象的。(因为面向对象需要具有封装、继承、多态的特征)\r\nJavaScript是一门解释型的语言，浏览器充当解释器（就是说，代码执行不进行预编译）。\r\nJavaScript执行引擎并不是一行一行的执行，而是一段一段的分析执行。', 25, 1, 0, 2);
INSERT INTO `jk_article` (`aid`, `title`, `content`, `time`, `thumb`, `summary`, `click`, `istop`, `isdel`, `cid`) VALUES
(4, 'JavaScript基础2——关于变量', '<div id="cnblogs_post_body"><ul>\r\n<li><span style="font-size: 15px; font-family: Microsoft YaHei;"><strong>变量的声明</strong></span><span style="font-size: 15px;"><strong style="font-size: 13px; font-family: Microsoft YaHei;"><span style="font-family: Microsoft YaHei;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </strong></span></li>\r\n</ul>\r\n<p><span style="font-size: 15px;"><strong style="font-size: 13px; font-family: Microsoft YaHei;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong><span style="font-family: Microsoft YaHei; font-size: 13px;">&nbsp;&nbsp; 变量的定义：使用var关键字来声明，区分大小写的。</span></span><strong>注意</strong>：不用var,会污染全局变量<span style="font-size: 15px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">。</span><br><span style="font-family: Microsoft YaHei; font-size: 13px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n变量的命名规范是：字母，数字，$符和下划线构成，但是不可以以数字开始，并且变量名不可以使用关键字。</span></span></p>\r\n<p><span style="font-family: Microsoft YaHei; font-size: 13px;">&nbsp;&nbsp;&nbsp;&nbsp; <strong>1、声明变量</strong></span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;">1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">2</span>     <span style="color: #0000ff;">var</span> i=123;<span style="color: #008000;">//</span><span style="color: #008000;">使用var关键字声明变量</span>\r\n<span style="color: #008080;">3</span>     <span style="color: #0000ff;">var</span> s="Jackie"<span style="color: #000000;">;\r\n</span><span style="color: #008080;">4</span>     temp="直接赋值使用变量";<span style="color: #008000;">//</span><span style="color: #008000;">如果您所赋值的变量还未进行过声明，该变量会自动声明。</span>\r\n<span style="color: #008080;">5</span>     document.write(i+" "+s+" "+<span style="color: #000000;">temp);\r\n</span><span style="color: #008080;">6</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p><span style="font-size: 13px; font-family: Microsoft YaHei;">&nbsp;&nbsp;&nbsp;<strong>&nbsp; 2、重新声明变量</strong></span></p>\r\n<div class="cnblogs_code">\r\n<pre><span style="color: #008080;">1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">2</span>     <span style="color: #0000ff;">var</span> i=123;<span style="color: #008000;">//</span><span style="color: #008000;">使用var关键字声明变量</span>\r\n<span style="color: #008080;">3</span>     <span style="color: #0000ff;">var</span> i;<span style="color: #008000;">//</span><span style="color: #008000;">在重新声明该变量后，变量的值不会被重置或清除。</span>\r\n<span style="color: #008080;">4</span>     document.write("i的值是:"+i);<span style="color: #008000;">//</span><span style="color: #008000;">i的值还是123</span>\r\n<span style="color: #008080;">5</span> &lt;/script&gt;</pre>\r\n</div>\r\n<p>&nbsp; &nbsp;<span style="font-size: 13px; font-family: Microsoft YaHei;"><span style="font-size: 13px; font-family: Microsoft YaHei;"> 3、<strong>命名习惯</strong></span></span></p>\r\n<p style="margin-left: 30px;" align="left"><span style="font-size: 13px; font-family: Microsoft YaHei;">变量命名都以类型前缀+有意义的单词组成，用驼峰式命名法增加变量和函式的可读性。例如：sUserName，nCount。</span></p>\r\n<p align="left"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 前缀规范：</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="font-family: Microsoft YaHei; font-size: 13px;">每个局部变量都需要有一个类型前缀，按照类型可以分为：</span></p>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">1</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">2</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">3</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">4</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">5</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">6</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">7</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">8</span></p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  </td>\r\n<td>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">s：表示字符串。例如：sName，sHtml；</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">n：表示数字。例如：nPage，nTotal；</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">b：表示逻辑。例如：bChecked，bHasLogin；</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">a：表示数组。例如：aList，aGroup；</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">r：表示正则表达式。例如：rDomain，rEmail；</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">f：表示函数。例如：fGetHtml，fInit；</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">o：表示以上未涉及到的其他对象，例如：oButton，oDate；</span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">g：表示全局变量，例如：gUserName，gLoginTime；</span></p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  </td>\r\n\r\n\r\n\r\n\r\n\r\n\r\n </tr>\r\n\r\n\r\n\r\n\r\n\r\n\r\n</tbody>\r\n\r\n\r\n\r\n\r\n</table>\r\n<p>&nbsp;</p>\r\n<p align="left">&nbsp;&nbsp; 4<span style="font-family: Microsoft YaHei; font-size: 13px;">、<strong>变量的生存期</strong></span></p>\r\n<p align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n \r\n当您在函数内声明了一个变量后（用var，不用则为污染全局），就只能在该函数中访问该变量。当退出该函数后，这个变量会被撤销。这种变量称为本地变量或\r\n局部变量。您可以在不同的函数中使用名称相同的本地变量，这是因为只有声明过变量的函数能够识别其中的每个变量。<span style="font-family: Microsoft YaHei; font-size: 13px;">如果您在函数之外声明了一个变量（全局变量），则页面上的所有函数都可以访问该变量。这些变量的生存期从声明它们之后开始，在页面关闭时结束。</span></span></p>\r\n<p>&nbsp;&nbsp; 5、<strong>变量的思维导图</strong></p>\r\n<p><strong><img style="display: block; margin-left: auto; margin-right: auto;" src="http://images2015.cnblogs.com/blog/748999/201511/748999-20151105193622914-637644654.gif" alt=""></strong></p>\r\n<ul>\r\n<li>\r\n<p><span style="font-size: 15px;"><span style="font-family: Microsoft YaHei;"><strong>JavaScript</strong></span><strong><span style="font-family: Microsoft YaHei;">的数据类型</span><br></strong></span></p>\r\n\r\n\r\n\r\n</li>\r\n\r\n\r\n\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-size: 13px; font-family: Microsoft YaHei;">1、</span><span style="font-size: 13px; font-family: Microsoft YaHei;">ECMAScript 有 5 种原始类型（<strong>primitive type</strong>），即 <strong>Undefined</strong>、<strong>Null</strong>、<strong>Boolean</strong>、<strong>Number</strong> 和 <strong>String</strong>。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp; &nbsp; <strong>typeof</strong>函数获取一个变量的类型：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n* undefined - 如果变量是 Undefined 类型的<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n* boolean - 如果变量是 Boolean 类型的<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n* number - 如果变量是 Number 类型的 (整数、浮点数)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n* string - 如果变量是 String 类型的 （采用""、''''）<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n* object - 如果变量是一种引用类型或 Null 类型的<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n如：new Array()/ new String()...<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n* funciton -- 函数类型</span></p>\r\n<p style="margin-left: 30px;" align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>Null 数据类型</strong>：可以通过给一个变量赋 null 值来清除变量的内容。Jscript中 typeof 运算符将报告 null 值为 Object 类型，而非类型 null。null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"&gt;\r\n<span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span> &lt;head&gt;\r\n<span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span>   &lt;meta http-equiv="Content-Type" content="text/html;charset=UTF-8" /&gt;\r\n<span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span>   &lt;title&gt;&lt;/title&gt;\r\n<span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span>   &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span>       alert(<span style="color: #0000ff;">typeof</span> <span style="color: #0000ff;">null</span><span style="color: #000000;">);\r\n</span><span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span>   &lt;/script&gt;\r\n<span style="color: #008080;">14</span> \r\n<span style="color: #008080;">15</span> &lt;/head&gt;\r\n<span style="color: #008080;">16</span> \r\n<span style="color: #008080;">17</span> &lt;body&gt;\r\n<span style="color: #008080;">18</span> \r\n<span style="color: #008080;">19</span> &lt;/body&gt;\r\n<span style="color: #008080;">20</span> \r\n<span style="color: #008080;">21</span> &lt;/html&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;" align="left">&nbsp;</p>\r\n<p style="margin-left: 30px;" align="left">&nbsp;</p>\r\n<p style="margin-left: 30px;" align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>Undefined</strong><strong>数据类型：</strong>如下情况将返回 undefined 值：对象属性不存在，声明了变量但从未赋值。null和undefined的区别：</span></p>\r\n<div class="cnblogs_code">\r\n<pre><span style="color: #008080;">1</span> alert(<span style="color: #0000ff;">typeof</span> undefined); <span style="color: #008000;">//</span><span style="color: #008000;">output "undefined"</span>\r\n<span style="color: #008080;">2</span> \r\n<span style="color: #008080;">3</span> alert(<span style="color: #0000ff;">typeof</span> <span style="color: #0000ff;">null</span>); <span style="color: #008000;">//</span><span style="color: #008000;">output "object"</span>\r\n<span style="color: #008080;">4</span> \r\n<span style="color: #008080;">5</span> alert(<span style="color: #0000ff;">null</span> == undefined); <span style="color: #008000;">//</span><span style="color: #008000;">output "true"</span></pre>\r\n</div>\r\n<p style="margin-left: 30px;">ECMAScript认为undefined是从null派生出来的，所以把它们定义为相等的。</p>\r\n<div class="cnblogs_code">\r\n<pre><span style="color: #008080;">1</span> alert(<span style="color: #0000ff;">null</span> === undefined); <span style="color: #008000;">//</span><span style="color: #008000;">output "false"</span>\r\n<span style="color: #008080;">2</span> \r\n<span style="color: #008080;">3</span> alert(<span style="color: #0000ff;">typeof</span> <span style="color: #0000ff;">null</span> == <span style="color: #0000ff;">typeof</span> undefined); <span style="color: #008000;">//</span><span style="color: #008000;">output "false"</span></pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p style="margin-left: 30px;">null与undefined的类型是不一样的，所以输出"false"。而===代表绝对等于，在这里null === undefined输出false</p>\r\n<p><span style="font-size: 13px; font-family: Microsoft YaHei;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="font-size: 12px;">附上十八哥上课截图：</span></span></p>\r\n<p style="margin-left: 30px;" align="left"><span style="font-size: 13px; font-family: Microsoft YaHei;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img src="http://images2015.cnblogs.com/blog/748999/201511/748999-20151105192027430-524361042.png" alt=""><br><br>&nbsp;2、<strong>引用数据类型（对象、数组）</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 引用类型通常叫做类（class），也就是说，遇到引用值，所处理的就是对象。Object 对象自身用处不大，不过在了解其他类之前，还是应该了解它。因为 ECMAScript 中的 Object 对象与 Java 中的 java.lang.Object 相似，ECMAScript 中的所有对象都由这个对象继承而来，Object 对象中的所有属性和方法都会出现在其他对象中，所以理解了 Object 对象，就可以更好地理解其他对象</span><strong>。</strong></p>\r\n<p style="margin-left: 30px;" align="left">&nbsp;&nbsp;&nbsp;&nbsp; javascript引用数据类型是保存在堆内存中的对象，JavaScript不允许直接访问堆内存空间中的位置和操作堆内存空间，只能通过操作 对象在栈内存中的引用地址。所以引用类型的数据，在栈内存中保存的实际上是对象在堆内存中的引用地址。通过这个引用地址可以快速查找到保存在堆内存中的对象。下面我们来演示这个引用数据类型赋值过程<br>\r\n</p>\r\n<p style="margin-left: 30px; text-align: left;">&nbsp;<img style="display: block; margin-left: auto; margin-right: auto;" src="http://images2015.cnblogs.com/blog/748999/201511/748999-20151105194829696-589797035.png" alt=""></p>\r\n<p style="text-align: left; margin-left: 30px;">自然，给obj2添加name属性，实际上是给堆内存中的对象添加了name属性，obj2和obj1在栈内存中保存的只是堆内存对象的引用地址，虽然也是拷贝了一份，但指向的对象却是同一个。故而改变obj2引起了obj1的改变。 </p>\r\n<p style="margin-left: 30px;" align="left">基本类型值指的是那些保存在栈内存中的简单数据段，即这种值完全保存在内存中的一个位置。而引用类型值则是指那些保存在堆内存中的对象，即变量中保存的实际上只是一个指针，这个指针指向内存中的另一个位置，该位置保存对象。</p>\r\n<p style="text-align: left; margin-left: 30px;">简而言之，堆内存存放引用值，栈内存存放固定类型值。 </p>\r\n<p style="margin-left: 30px; text-align: left;"><img style="display: block; margin-left: auto; margin-right: auto;" src="http://images2015.cnblogs.com/blog/748999/201511/748999-20151105195044242-204375216.jpg" alt=""></p>\r\n<p style="margin-left: 30px;" align="left">在 ECMAScript 中，变量可以存在两种类型的值，即原始值和引用值。原始值存储在栈（stack）中的简单数据段，也就是说，它们的值直接存储在变量访问的位置。引用值存储在堆（heap）中的对象，也就是说，存储在变量处的值是一个指针（point），指向存储对象的内存处。</p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;script type="<span style="color: #000000;">text/javascript”&gt;\r\n</span><span style="color: #008080;"> 2</span> <span style="color: #000000;">var box = new Object(); //创建一个引用类型\r\n</span><span style="color: #008080;"> 3</span> \r\n<span style="color: #008080;"> 4</span> var box = "lee"<span style="color: #000000;">;  //基本类型字符串\r\n</span><span style="color: #008080;"> 5</span> \r\n<span style="color: #008080;"> 6</span> <span style="color: #000000;">box.age = 23;  //基本类型值添加属性很怪异，因为只有对象才可以添加属性\r\n</span><span style="color: #008080;"> 7</span> \r\n<span style="color: #008080;"> 8</span> <span style="color: #000000;">alert(box.age); //不是引用类型，无法输出\r\n</span><span style="color: #008080;"> 9</span> \r\n<span style="color: #008080;">10</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px; text-align: left;"><span style="font-size: 13px; font-family: Microsoft YaHei;"> 3<strong>、类型转换：</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 使用：Number()、parseInt() 和parseFloat()做类型转换。Number()强转一个数值(包含整数和浮点数)。*parseInt()强转整数，*parseFloat()强转浮点数;函数isNaN()检测参数是否不是一个数字（ is not a\r\nnumber）;Boolean(value) - 把给定的值转换成 Boolean 型；String(value) - 把给定的值转换成字符串。</span></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="font-size: 13px;">4、</span><span style="font-size: 13px; font-family: Microsoft YaHei;"><strong>数据类型思维导图</strong></span></p>\r\n<p>&nbsp;&nbsp;&nbsp; <img style="display: block; margin-left: auto; margin-right: auto;" src="http://images2015.cnblogs.com/blog/748999/201511/748999-20151105195141227-1133830683.gif" alt=""></p>\r\n<!--[if gte mso 9]><xml>\r\n <w:WordDocument>\r\n  <w:View>Normal</w:View>\r\n  <w:Zoom>0</w:Zoom>\r\n  <w:TrackMoves/>\r\n  <w:TrackFormatting/>\r\n  <w:PunctuationKerning/>\r\n  <w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>\r\n  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>\r\n  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>\r\n  <w:ValidateAgainstSchemas/>\r\n  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>\r\n  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>\r\n  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>\r\n  <w:DoNotPromoteQF/>\r\n  <w:LidThemeOther>EN-US</w:LidThemeOther>\r\n  <w:LidThemeAsian>ZH-CN</w:LidThemeAsian>\r\n  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>\r\n  <w:Compatibility>\r\n   <w:SpaceForUL/>\r\n   <w:BalanceSingleByteDoubleByteWidth/>\r\n   <w:DoNotLeaveBackslashAlone/>\r\n   <w:ULTrailSpace/>\r\n   <w:DoNotExpandShiftReturn/>\r\n   <w:AdjustLineHeightInTable/>\r\n   <w:BreakWrappedTables/>\r\n   <w:SnapToGridInCell/>\r\n   <w:WrapTextWithPunct/>\r\n   <w:UseAsianBreakRules/>\r\n   <w:DontGrowAutofit/>\r\n   <w:SplitPgBreakAndParaMark/>\r\n   <w:EnableOpenTypeKerning/>\r\n   <w:DontFlipMirrorIndents/>\r\n   <w:OverrideTableStyleHps/>\r\n   <w:UseFELayout/>\r\n  </w:Compatibility>\r\n  <m:mathPr>\r\n   <m:mathFont m:val="Cambria Math"/>\r\n   <m:brkBin m:val="before"/>\r\n   <m:brkBinSub m:val="&#45;-"/>\r\n   <m:smallFrac m:val="off"/>\r\n   <m:dispDef/>\r\n   <m:lMargin m:val="0"/>\r\n   <m:rMargin m:val="0"/>\r\n   <m:defJc m:val="centerGroup"/>\r\n   <m:wrapIndent m:val="1440"/>\r\n   <m:intLim m:val="subSup"/>\r\n   <m:naryLim m:val="undOvr"/>\r\n  </m:mathPr></w:WordDocument>\r\n</xml><![endif]--><!--[if gte mso 9]><xml>\r\n <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false"\r\n  DefSemiHidden="false" DefQFormat="false" DefPriority="99"\r\n  LatentStyleCount="371">\r\n  <w:LsdException Locked="false" Priority="0" QFormat="true" Name="Normal"/>\r\n  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 1"/>\r\n  <w:LsdException Locked="false" Priority="9" SemiHidden="true"\r\n   UnhideWhenUsed="true" QFormat="true" Name="heading 2"/>\r\n  <w:LsdException Locked="false" Priority="9" SemiHidden="true"\r\n   UnhideWhenUsed="true" QFormat="true" Name="heading 3"/>\r\n  <w:LsdException Locked="false" Priority="9" SemiHidden="true"\r\n   UnhideWhenUsed="true" QFormat="true" Name="heading 4"/>\r\n  <w:LsdException Locked="false" Priority="9" SemiHidden="true"\r\n   UnhideWhenUsed="true" QFormat="true" Name="heading 5"/>\r\n  <w:LsdException Locked="false" Priority="9" SemiHidden="true"\r\n   UnhideWhenUsed="true" QFormat="true" Name="heading 6"/>\r\n  <w:LsdException Locked="false" Priority="9" SemiHidden="true"\r\n   UnhideWhenUsed="true" QFormat="true" Name="heading 7"/>\r\n  <w:LsdException Locked="false" Priority="9" SemiHidden="true"\r\n   UnhideWhenUsed="true" QFormat="true" Name="heading 8"/>\r\n  <w:LsdException Locked="false" Priority="9" SemiHidden="true"\r\n   UnhideWhenUsed="true" QFormat="true" Name="heading 9"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="index 1"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="index 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="index 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="index 4"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="index 5"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="index 6"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="index 7"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="index 8"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="index 9"/>\r\n  <w:LsdException Locked="false" Priority="39" SemiHidden="true"\r\n   UnhideWhenUsed="true" Name="toc 1"/>\r\n  <w:LsdException Locked="false" Priority="39" SemiHidden="true"\r\n   UnhideWhenUsed="true" Name="toc 2"/>\r\n  <w:LsdException Locked="false" Priority="39" SemiHidden="true"\r\n   UnhideWhenUsed="true" Name="toc 3"/>\r\n  <w:LsdException Locked="false" Priority="39" SemiHidden="true"\r\n   UnhideWhenUsed="true" Name="toc 4"/>\r\n  <w:LsdException Locked="false" Priority="39" SemiHidden="true"\r\n   UnhideWhenUsed="true" Name="toc 5"/>\r\n  <w:LsdException Locked="false" Priority="39" SemiHidden="true"\r\n   UnhideWhenUsed="true" Name="toc 6"/>\r\n  <w:LsdException Locked="false" Priority="39" SemiHidden="true"\r\n   UnhideWhenUsed="true" Name="toc 7"/>\r\n  <w:LsdException Locked="false" Priority="39" SemiHidden="true"\r\n   UnhideWhenUsed="true" Name="toc 8"/>\r\n  <w:LsdException Locked="false" Priority="39" SemiHidden="true"\r\n   UnhideWhenUsed="true" Name="toc 9"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Normal Indent"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="footnote text"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="annotation text"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="header"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="footer"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="index heading"/>\r\n  <w:LsdException Locked="false" Priority="35" SemiHidden="true"\r\n   UnhideWhenUsed="true" QFormat="true" Name="caption"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="table of figures"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="envelope address"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="envelope return"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="footnote reference"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="annotation reference"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="line number"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="page number"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="endnote reference"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="endnote text"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="table of authorities"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="macro"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="toa heading"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Bullet"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Number"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List 4"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List 5"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Bullet 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Bullet 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Bullet 4"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Bullet 5"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Number 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Number 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Number 4"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Number 5"/>\r\n  <w:LsdException Locked="false" Priority="10" QFormat="true" Name="Title"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Closing"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Signature"/>\r\n  <w:LsdException Locked="false" Priority="1" SemiHidden="true"\r\n   UnhideWhenUsed="true" Name="Default Paragraph Font"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Body Text"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Body Text Indent"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Continue"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Continue 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Continue 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Continue 4"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="List Continue 5"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Message Header"/>\r\n  <w:LsdException Locked="false" Priority="11" QFormat="true" Name="Subtitle"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Salutation"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Date"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Body Text First Indent"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Body Text First Indent 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Note Heading"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Body Text 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Body Text 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Body Text Indent 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Body Text Indent 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Block Text"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Hyperlink"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="FollowedHyperlink"/>\r\n  <w:LsdException Locked="false" Priority="22" QFormat="true" Name="Strong"/>\r\n  <w:LsdException Locked="false" Priority="20" QFormat="true" Name="Emphasis"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Document Map"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Plain Text"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="E-mail Signature"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="HTML Top of Form"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="HTML Bottom of Form"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Normal (Web)"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="HTML Acronym"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="HTML Address"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="HTML Cite"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="HTML Code"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="HTML Definition"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="HTML Keyboard"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="HTML Preformatted"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="HTML Sample"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="HTML Typewriter"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="HTML Variable"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Normal Table"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="annotation subject"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="No List"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Outline List 1"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Outline List 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Outline List 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Simple 1"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Simple 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Simple 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Classic 1"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Classic 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Classic 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Classic 4"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Colorful 1"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Colorful 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Colorful 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Columns 1"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Columns 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Columns 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Columns 4"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Columns 5"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Grid 1"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Grid 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Grid 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Grid 4"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Grid 5"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Grid 6"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Grid 7"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Grid 8"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table List 1"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table List 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table List 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table List 4"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table List 5"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table List 6"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table List 7"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table List 8"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table 3D effects 1"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table 3D effects 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table 3D effects 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Contemporary"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Elegant"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Professional"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Subtle 1"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Subtle 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Web 1"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Web 2"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Web 3"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Balloon Text"/>\r\n  <w:LsdException Locked="false" Priority="39" Name="Table Grid"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"\r\n   Name="Table Theme"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" Name="Placeholder Text"/>\r\n  <w:LsdException Locked="false" Priority="1" QFormat="true" Name="No Spacing"/>\r\n  <w:LsdException Locked="false" Priority="60" Name="Light Shading"/>\r\n  <w:LsdException Locked="false" Priority="61" Name="Light List"/>\r\n  <w:LsdException Locked="false" Priority="62" Name="Light Grid"/>\r\n  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/>\r\n  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/>\r\n  <w:LsdException Locked="false" Priority="65" Name="Medium List 1"/>\r\n  <w:LsdException Locked="false" Priority="66" Name="Medium List 2"/>\r\n  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/>\r\n  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/>\r\n  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/>\r\n  <w:LsdException Locked="false" Priority="70" Name="Dark List"/>\r\n  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/>\r\n  <w:LsdException Locked="false" Priority="72" Name="Colorful List"/>\r\n  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/>\r\n  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/>\r\n  <w:LsdException Locked="false" SemiHidden="true" Name="Revision"/>\r\n  <w:LsdException Locked="false" Priority="34" QFormat="true"\r\n   Name="List Paragraph"/>\r\n  <w:LsdException Locked="false" Priority="29" QFormat="true" Name="Quote"/>\r\n  <w:LsdException Locked="false" Priority="30" QFormat="true"\r\n   Name="Intense Quote"/>\r\n  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="19" QFormat="true"\r\n   Name="Subtle Emphasis"/>\r\n  <w:LsdException Locked="false" Priority="21" QFormat="true"\r\n   Name="Intense Emphasis"/>\r\n  <w:LsdException Locked="false" Priority="31" QFormat="true"\r\n   Name="Subtle Reference"/>\r\n  <w:LsdException Locked="false" Priority="32" QFormat="true"\r\n   Name="Intense Reference"/>\r\n  <w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/>\r\n  <w:LsdException Locked="false" Priority="37" SemiHidden="true"\r\n   UnhideWhenUsed="true" Name="Bibliography"/>\r\n  <w:LsdException Locked="false" Priority="39" SemiHidden="true"\r\n   UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/>\r\n  <w:LsdException Locked="false" Priority="41" Name="Plain Table 1"/>\r\n  <w:LsdException Locked="false" Priority="42" Name="Plain Table 2"/>\r\n  <w:LsdException Locked="false" Priority="43" Name="Plain Table 3"/>\r\n  <w:LsdException Locked="false" Priority="44" Name="Plain Table 4"/>\r\n  <w:LsdException Locked="false" Priority="45" Name="Plain Table 5"/>\r\n  <w:LsdException Locked="false" Priority="40" Name="Grid Table Light"/>\r\n  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark"/>\r\n  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful"/>\r\n  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful"/>\r\n  <w:LsdException Locked="false" Priority="46"\r\n   Name="Grid Table 1 Light Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="51"\r\n   Name="Grid Table 6 Colorful Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="52"\r\n   Name="Grid Table 7 Colorful Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="46"\r\n   Name="Grid Table 1 Light Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="51"\r\n   Name="Grid Table 6 Colorful Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="52"\r\n   Name="Grid Table 7 Colorful Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="46"\r\n   Name="Grid Table 1 Light Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="51"\r\n   Name="Grid Table 6 Colorful Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="52"\r\n   Name="Grid Table 7 Colorful Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="46"\r\n   Name="Grid Table 1 Light Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="51"\r\n   Name="Grid Table 6 Colorful Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="52"\r\n   Name="Grid Table 7 Colorful Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="46"\r\n   Name="Grid Table 1 Light Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="51"\r\n   Name="Grid Table 6 Colorful Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="52"\r\n   Name="Grid Table 7 Colorful Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="46"\r\n   Name="Grid Table 1 Light Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="51"\r\n   Name="Grid Table 6 Colorful Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="52"\r\n   Name="Grid Table 7 Colorful Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="List Table 2"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="List Table 3"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="List Table 4"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark"/>\r\n  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful"/>\r\n  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful"/>\r\n  <w:LsdException Locked="false" Priority="46"\r\n   Name="List Table 1 Light Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="51"\r\n   Name="List Table 6 Colorful Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="52"\r\n   Name="List Table 7 Colorful Accent 1"/>\r\n  <w:LsdException Locked="false" Priority="46"\r\n   Name="List Table 1 Light Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="51"\r\n   Name="List Table 6 Colorful Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="52"\r\n   Name="List Table 7 Colorful Accent 2"/>\r\n  <w:LsdException Locked="false" Priority="46"\r\n   Name="List Table 1 Light Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="51"\r\n   Name="List Table 6 Colorful Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="52"\r\n   Name="List Table 7 Colorful Accent 3"/>\r\n  <w:LsdException Locked="false" Priority="46"\r\n   Name="List Table 1 Light Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="51"\r\n   Name="List Table 6 Colorful Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="52"\r\n   Name="List Table 7 Colorful Accent 4"/>\r\n  <w:LsdException Locked="false" Priority="46"\r\n   Name="List Table 1 Light Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="51"\r\n   Name="List Table 6 Colorful Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="52"\r\n   Name="List Table 7 Colorful Accent 5"/>\r\n  <w:LsdException Locked="false" Priority="46"\r\n   Name="List Table 1 Light Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="51"\r\n   Name="List Table 6 Colorful Accent 6"/>\r\n  <w:LsdException Locked="false" Priority="52"\r\n   Name="List Table 7 Colorful Accent 6"/>\r\n </w:LatentStyles>\r\n</xml><![endif]--><!--[if gte mso 10]>\r\n<style>\r\n /* Style Definitions */\r\n table.MsoNormalTable\r\n	{mso-style-name:普通表格;\r\n	mso-tstyle-rowband-size:0;\r\n	mso-tstyle-colband-size:0;\r\n	mso-style-noshow:yes;\r\n	mso-style-priority:99;\r\n	mso-style-parent:"";\r\n	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;\r\n	mso-para-margin:0cm;\r\n	mso-para-margin-bottom:.0001pt;\r\n	mso-pagination:widow-orphan;\r\n	font-size:10.5pt;\r\n	mso-bidi-font-size:11.0pt;\r\n	font-family:"Calibri",sans-serif;\r\n	mso-ascii-font-family:Calibri;\r\n	mso-ascii-theme-font:minor-latin;\r\n	mso-hansi-font-family:Calibri;\r\n	mso-hansi-theme-font:minor-latin;\r\n	mso-font-kerning:1.0pt;}\r\n</style>\r\n<![endif]--></div>', 1410364800, '/myworld/Uploads/images/09563T1A-4.jpg', ' 变量的定义：使用var关键字来声明，区分大小写的。注意：不用var,会污染全局变量。\r\n        变量的命名规范是：字母，数字，$符和下划线构成，但是不可以以数字开始，并且变量名不可以使用关键字。', 25, 1, 0, 2);
INSERT INTO `jk_article` (`aid`, `title`, `content`, `time`, `thumb`, `summary`, `click`, `istop`, `isdel`, `cid`) VALUES
(5, 'JavaScript基础3——关于运算符', '<div id="cnblogs_post_body"><ul>\r\n<li><strong><span style="font-family: Microsoft YaHei; font-size: 15px;">算数运算符</span></strong></li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">算数运算符有+、-、*、/、%、++、--、=、类似+=的运算符，其使用方式与编程语言(Java、C++、C#等)基本一样。</span><span style="font-family: Microsoft YaHei;"><span style="font-size: 13px;">给定 </span><span style="font-size: 13px;"><em>y=5</em>，下面的表格解释了这些算术运算符：</span></span></p>\r\n<table class="dataintable" style="width: 345px; height: 205px;" border="1">\r\n<tbody>\r\n<tr><th style="text-align: center;">运算符</th><th style="text-align: center;">描述</th><th style="text-align: center;">例子</th><th style="text-align: center;">结果</th></tr>\r\n<tr>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">+</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">加</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=y+2</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=7</span></td>\r\n</tr>\r\n<tr>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">-</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">减</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=y-2</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=3</span></td>\r\n</tr>\r\n<tr>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">*</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">乘</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=y*2</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=10</span></td>\r\n</tr>\r\n<tr>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">/</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">除</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=y/2</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=2.5</span></td>\r\n</tr>\r\n<tr>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">%</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">求余数 (保留整数)</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=y%2</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=1</span></td>\r\n</tr>\r\n<tr>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">++</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">累加</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=++y</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=6</span></td>\r\n</tr>\r\n<tr>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">--</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">递减</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=--y</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=4</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">下面主要演示+运算符（字符串连接符）：</span></span></p>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span>      i=5+5<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span>      document.write("i的值是:"+i+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">10</span>\r\n<span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span>      i="5"+"5"<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span>      document.write("i的值是:"+i+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">55</span>\r\n<span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span>      i=5+"5"<span style="color: #000000;">;\r\n</span><span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span>      document.write("i的值是:"+i+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">55</span>\r\n<span style="color: #008080;">14</span> \r\n<span style="color: #008080;">15</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<ul>\r\n<li><strong><span style="font-family: Microsoft YaHei; font-size: 13px;">位运算符</span></strong></li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">位运算符主要包括(~(非运算)、&amp;(与运算)、|(或运算)、^(异或运算))。</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span>    <span style="color: #0000ff;">var</span> iNum1 = 25;      <span style="color: #008000;">//</span><span style="color: #008000;">25 等于00000000000000000000000000011001</span>\r\n<span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span>    <span style="color: #0000ff;">var</span> iNum2 = ~iNum1;<span style="color: #008000;">//</span><span style="color: #008000;"> 转换为11111111111111111111111111100110</span>\r\n<span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span>    document.write(iNum2+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出 "-26"</span>\r\n<span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span>     <span style="color: #0000ff;">var</span> iResult = 25 &amp; 3<span style="color: #000000;">;\r\n</span><span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span>      <span style="color: #008000;">/*</span>\r\n<span style="color: #008080;">12</span> <span style="color: #008000;">     25 = 0000 0000 0000 0000 0000 0000 0001 1001\r\n</span><span style="color: #008080;">13</span> <span style="color: #008000;">      3 = 0000 0000 0000 0000 0000 0000 0000 0011\r\n</span><span style="color: #008080;">14</span> <span style="color: #008000;">     ---------------------------------------------\r\n</span><span style="color: #008080;">15</span> <span style="color: #008000;">   AND = 0000 0000 0000 0000 0000 0000 0000 0001\r\n</span><span style="color: #008080;">16</span>      <span style="color: #008000;">*/</span>\r\n<span style="color: #008080;">17</span> \r\n<span style="color: #008080;">18</span>    document.write(iResult+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出 "1"</span>\r\n<span style="color: #008080;">19</span> \r\n<span style="color: #008080;">20</span>    <span style="color: #0000ff;">var</span> iResult = 25 | 3<span style="color: #000000;">;\r\n</span><span style="color: #008080;">21</span> \r\n<span style="color: #008080;">22</span>      <span style="color: #008000;">/*</span>\r\n<span style="color: #008080;">23</span> <span style="color: #008000;">     25 = 0000 0000 0000 0000 0000 0000 0001 1001\r\n</span><span style="color: #008080;">24</span> <span style="color: #008000;">      3 = 0000 0000 0000 0000 0000 0000 0000 0011\r\n</span><span style="color: #008080;">25</span> <span style="color: #008000;">     --------------------------------------------\r\n</span><span style="color: #008080;">26</span> <span style="color: #008000;">     OR = 0000 0000 0000 0000 0000 0000 0001 1011\r\n</span><span style="color: #008080;">27</span>      <span style="color: #008000;">*/</span>\r\n<span style="color: #008080;">28</span> \r\n<span style="color: #008080;">29</span>    document.write(iResult+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出 "27"</span>\r\n<span style="color: #008080;">30</span> \r\n<span style="color: #008080;">31</span>    <span style="color: #0000ff;">var</span> iResult = 25 ^ 3<span style="color: #000000;">;\r\n</span><span style="color: #008080;">32</span> \r\n<span style="color: #008080;">33</span>      <span style="color: #008000;">/*</span>\r\n<span style="color: #008080;">34</span> <span style="color: #008000;">     25 = 0000 0000 0000 0000 0000 0000 0001 1001\r\n</span><span style="color: #008080;">35</span> <span style="color: #008000;">      3 = 0000 0000 0000 0000 0000 0000 0000 0011\r\n</span><span style="color: #008080;">36</span> <span style="color: #008000;">     ---------------------------------------------\r\n</span><span style="color: #008080;">37</span> <span style="color: #008000;">   XOR = 0000 0000 0000 0000 0000 0000 0001 1010\r\n</span><span style="color: #008080;">38</span>      <span style="color: #008000;">*/</span>\r\n<span style="color: #008080;">39</span> \r\n<span style="color: #008080;">40</span>    document.write(iResult+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出 "26"</span>\r\n<span style="color: #008080;">41</span> \r\n<span style="color: #008080;">42</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<ul>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-size: 15px;"><strong>Boolean运算</strong></span>(!(求反运算)、&amp;&amp;(与运算)、||(或运算))</span></li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">对boolean值进行的运算，与编程语言的运算方式基本一致。</span></p>\r\n<ul>\r\n<li><strong><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-size: 15px;">关系运算</span>(&lt;、&gt;、&lt;=、&gt;=、==、!=)</span></strong></li>\r\n</ul>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span>     <span style="color: #0000ff;">var</span> bool = 2&lt;1<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span>      document.write(bool+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出false</span>\r\n<span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span>     <span style="color: #0000ff;">var</span> bool = "a"&lt;"b";<span style="color: #008000;">//</span><span style="color: #008000;">字母 a的字符代码是 97,字母b的字符代码是 98</span>\r\n<span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span>      document.write(bool+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出ture</span>\r\n<span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span>     <span style="color: #0000ff;">var</span> bool = "98"&lt;97;<span style="color: #008000;">//</span><span style="color: #008000;">字符串 "98"将被转换成数字 98</span>\r\n<span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span>      document.write(bool+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出false</span>\r\n<span style="color: #008080;">14</span> \r\n<span style="color: #008080;">15</span>     <span style="color: #0000ff;">var</span> bool = "a"&lt;9999;<span style="color: #008000;">//</span><span style="color: #008000;">这样比较总是返回false，不管是&lt;、&gt;、&lt;=、&gt;=</span>\r\n<span style="color: #008080;">16</span> \r\n<span style="color: #008080;">17</span>      document.write(bool+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出false</span>\r\n<span style="color: #008080;">18</span> \r\n<span style="color: #008080;">19</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<ul>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-size: 15px;"><strong>等性运算符</strong></span>(==、===、!=、!==)</span></li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">下表是一些特殊情况的值：</span></p>\r\n<table style="margin-left: 30px; width: 591px; height: 226px;" border="1" cellspacing="0" cellpadding="0">\r\n<tbody style="margin-left: 30px;">\r\n<tr style="margin-left: 30px;">\r\n<td style="margin-left: 30px;" valign="top" width="128">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>表达式</strong></span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="61">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>值</strong></span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="129">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>表达式</strong></span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="61">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>值</strong></span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="123">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>表达式</strong></span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="67">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>值</strong></span></p>\r\n</td>\r\n</tr>\r\n<tr style="margin-left: 30px;">\r\n<td style="margin-left: 30px;" valign="top" width="128">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;">null==undefined</span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="61">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>true</strong></span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="129">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;">“NaN”==NaN</span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="61">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>false</strong></span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="123">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;">5==NaN</span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="67">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>false</strong></span></p>\r\n</td>\r\n</tr>\r\n<tr style="margin-left: 30px;">\r\n<td style="margin-left: 30px;" valign="top" width="128">\r\n<p style="margin-left: 30px; text-align: center;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;">NaN==NaN</span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="61">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>false</strong></span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="129">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;">NaN!=NaN</span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="61">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>true</strong></span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="123">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;">false==0</span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="67">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>true</strong></span></p>\r\n</td>\r\n</tr>\r\n<tr style="margin-left: 30px;">\r\n<td style="margin-left: 30px;" valign="top" width="128">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;">true==1</span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="61">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>true</strong></span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="129">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;">true==2</span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="61">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>false</strong></span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="123">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;">undefined==0</span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="67">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>false</strong></span></p>\r\n</td>\r\n</tr>\r\n<tr style="margin-left: 30px;">\r\n<td style="margin-left: 30px;" valign="top" width="128">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;">null==0</span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="61">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>fale</strong></span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="129">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;">“5”==5</span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="61">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>true</strong></span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="123">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;">&nbsp;</span></p>\r\n</td>\r\n<td style="margin-left: 30px;" valign="top" width="67">\r\n<p style="margin-left: 30px;" align="center"><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>&nbsp;</strong></span></p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">全等号由三个等号表示（===），只有在无需类型转换运算数就相等的情况下，才返回 true。</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span>     <span style="color: #0000ff;">var</span> i = "66"<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span>      <span style="color: #0000ff;">var</span> j = 66<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span>      document.write((i == j)+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出 "true"</span>\r\n<span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span>      document.write((i === j)+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出 "false"</span>\r\n<span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span>      document.write((i != j)+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出 "fale"</span>\r\n<span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span>      document.write((i !== j)+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出 "true"</span>\r\n<span style="color: #008080;">14</span> \r\n<span style="color: #008080;">15</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<ul>\r\n<li><span style="font-size: 15px;"><strong><span style="font-family: Microsoft YaHei;">条件运算符</span></strong></span></li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">variable = boolean_expression ? true_value : false_value;条件运算符与编程语言的使用方式基本一致。</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;">1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">2</span> \r\n<span style="color: #008080;">3</span>      <span style="color: #0000ff;">var</span> num1=25,num2=565<span style="color: #000000;">;\r\n</span><span style="color: #008080;">4</span>  \r\n<span style="color: #008080;">5</span>      <span style="color: #0000ff;">var</span> max = (num1&gt;num2) ? num1 : num2;<span style="color: #008000;">//</span><span style="color: #008000;">取最大值</span>\r\n<span style="color: #008080;">6</span> \r\n<span style="color: #008080;">7</span>      document.write(max+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出 "true"</span>\r\n<span style="color: #008080;">8</span> \r\n<span style="color: #008080;">9</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<ul>\r\n<li><span style="font-size: 15px;"><strong><span style="font-family: Microsoft YaHei;">其他运算符</span></strong></span></li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">a<strong>. 赋值运算符</strong></span></p>\r\n<p style="margin-left: 30px;" align="left"><span style="font-family: Microsoft YaHei; font-size: 13px;">每种主要的算术运算以及其他几个运算都有复合赋值运算符：</span></p>\r\n<ul>\r\n<li style="list-style-type: none;">\r\n<ul>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">乘法/赋值（*=）</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">除法/赋值（/=）</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">取模/赋值（%=）</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">加法/赋值（+=）</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">减法/赋值（-=）</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">左移/赋值（&lt;&lt;=）</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">有符号右移/赋值（&gt;&gt;=）</span></li>\r\n<li><span style="font-family: Microsoft YaHei; font-size: 13px;">无符号右移/赋值（&gt;&gt;&gt;=）</span></li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<p style="margin-left: 30px;">给定 <em>x=10</em> 和 <em>y=5</em>，下面的表格解释了赋值运算符：</p>\r\n<table class="dataintable" style="margin-left: 30px; width: 348px; height: 204px;" border="1">\r\n<tbody style="margin-left: 30px;">\r\n<tr style="margin-left: 30px;"><th style="margin-left: 30px; text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">运算符</span></th><th><span style="font-family: Microsoft YaHei; font-size: 13px;">例子</span></th><th><span style="font-family: Microsoft YaHei; font-size: 13px;">等价于</span></th><th><span style="font-family: Microsoft YaHei; font-size: 13px;">结果</span></th></tr>\r\n<tr>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">=</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=y</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">&nbsp;</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=5</span></td>\r\n</tr>\r\n<tr>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">+=</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x+=y</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=x+y</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=15</span></td>\r\n</tr>\r\n<tr>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">-=</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x-=y</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=x-y</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=5</span></td>\r\n</tr>\r\n<tr>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">*=</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x*=y</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=x*y</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=50</span></td>\r\n</tr>\r\n<tr>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">/=</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x/=y</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=x/y</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=2</span></td>\r\n</tr>\r\n<tr>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">%=</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x%=y</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=x%y</span></td>\r\n<td style="text-align: center;"><span style="font-family: Microsoft YaHei; font-size: 13px;">x=0</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">b<strong>.</strong></span><strong><span style="font-family: Microsoft YaHei; font-size: 13px;">逗号运算符</span></strong></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">用逗号运算符可以在一条语句中执行多个运算。</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">例如：var iNum1 = 1, iNum = 2, iNum3 = 3;</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">c.<strong>typeof运算符</strong></span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">typeof 运算符有一个参数，即要检查的变量或值，对变量或值调用 typeof 运算符将返回下列值之一：Undefined：如果变量是 Undefined 类型的；Boolean：如果变量是 Boolean 类型的；Number：如果变量是 Number 类型的；String：如果变量是 String 类型的；Object：如果变量是一种引用类型或 Null 类型的。</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span>     <span style="color: #0000ff;">var</span> temp1="Jackie"<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span>      <span style="color: #0000ff;">var</span> temp2;<span style="color: #008000;">//</span><span style="color: #008000;">Undefined类型只有一个值，即 undefined。当声明的变量未初始化时，该变量的默认值是 undefined。</span>\r\n<span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span>      document.write((<span style="color: #0000ff;">typeof</span> temp1)+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">string</span>\r\n<span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span>      document.write((<span style="color: #0000ff;">typeof</span> temp2)+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">undefined</span>\r\n<span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span>      document.write((<span style="color: #0000ff;">typeof</span> 86)+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">number</span>\r\n<span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span>      document.write((<span style="color: #0000ff;">typeof</span> <span style="color: #0000ff;">null</span>)+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">object</span>\r\n<span style="color: #008080;">14</span> \r\n<span style="color: #008080;">15</span> &lt;/script&gt;\r\n<span style="color: #008080;">16</span> \r\n<span style="color: #008080;">17</span> <span style="color: #008000;">/*</span><span style="color: #008000;">Undefined：Undefined类型只有一个值，即 undefined。当声明的变量未初始化时，该变量的默认值是 undefined。\r\n</span><span style="color: #008080;">18</span> <span style="color: #008000;">null：另一种只有一个值的类型是 Null，它只有一个专用值 null，即它的字面量。值 undefined 实际上是从值 null 派生来的，因此 ECMAScript 把它们定义为相等的。alert(null == undefined); //输出 "true"。\r\n</span><span style="color: #008080;">19</span> <span style="color: #008000;">*/</span></pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">d.<strong>delete运算符</strong></span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">delete 运算符删除对以前定义的对象属性或方法的引用。例如：</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span>     <span style="color: #0000ff;">var</span> o = <span style="color: #0000ff;">new</span><span style="color: #000000;"> Object;\r\n</span><span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span>      o.name = "Jackie"<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span>      document.write(o.name+"&lt;br&gt;");   <span style="color: #008000;">//</span><span style="color: #008000;">输出 "Jackie"</span>\r\n<span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span>     <span style="color: #0000ff;">delete</span><span style="color: #000000;"> o.name;\r\n</span><span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span>      document.write(o.name+"&lt;br&gt;");   <span style="color: #008000;">//</span><span style="color: #008000;">输出 "undefined"</span>\r\n<span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">e.<strong> instanceof运算符</strong></span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">能用 instanceof 运算符检查给定变量指向的对象的类型。例如：</span></p>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span>     <span style="color: #0000ff;">function</span> Car()<span style="color: #008000;">//</span><span style="color: #008000;">使用原型方式(或混合的构造函数/原型方式)声明instanceof才有用</span>\r\n<span style="color: #008080;"> 4</span> <span style="color: #000000;">     {}\r\n</span><span style="color: #008080;"> 5</span> \r\n<span style="color: #008080;"> 6</span>      <span style="color: #0000ff;">var</span> car=<span style="color: #0000ff;">new</span><span style="color: #000000;"> Car();\r\n</span><span style="color: #008080;"> 7</span> \r\n<span style="color: #008080;"> 8</span>      document.write((car <span style="color: #0000ff;">instanceof</span> Car)+"&lt;br&gt;");<span style="color: #008000;">//</span><span style="color: #008000;">输出 true</span>\r\n<span style="color: #008080;"> 9</span> \r\n<span style="color: #008080;">10</span> &lt;/script&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">使用instanceof 运算符会出现很多意想不到的结果，建议不用。使用原型方式(或混合的构造函数/原型方式)声明instanceof才有用</span></p>\r\n<p style="margin-left: 30px;" align="left"><strong><span style="font-size: 12px;"><span style="font-family: Microsoft YaHei;">注：</span>数据类型转换</span></strong></p>\r\n<p style="margin-left: 60px;">&nbsp;</p>\r\n<p style="margin-left: 30px;" align="left"><span style="font-size: 12px;"><strong>String()</strong> 转换为字符串类型</span><br><span style="font-size: 12px;"><strong>\r\nNumber()</strong> 转换为数字类型</span><br><span style="font-size: 12px;"><strong>\r\nBoolean()</strong> 转换为布尔类型</span></p>\r\n<p style="margin-left: 60px;">&nbsp;</p>\r\n<p style="margin-left: 30px;" align="left"><span style="font-size: 12px;"><strong>parseInt</strong>：将字符串转换为整数。从字符串的开头开始解析，在第一个非整数的位置停止解析，并返回前面读到所有的整数。如果字符串不是以整数开头的，将返回NaN。如：parseInt（“150\r\nhi”）返回的值是：150，parseInt("hi")返回的值是：NaN。</span><br><span style="font-size: 12px;"><strong>\r\nparseFloat</strong>：将字符串转换为浮点数。 从字符串的开头开始解析，在第一个非整数的位置停止解析，并返回前面读到所有的整数。如果字符串不是以整数开头的，将返回NaN。如：parseFloat("15.5 hi") 返回的值是：15.5，parseFloat("hi\r\n15.5")返回的值是：NaN。</span></p>\r\n<p style="margin-left: 60px;">&nbsp;</p>\r\n<p style="margin-left: 30px;" align="left"><span style="font-size: 12px;"><strong>eval</strong>：将字符串作为javascript表达式进行计算，并返回执行结果，如果没有结果则返回undefined。</span></p>\r\n<p style="margin-left: 30px;" align="left"><span style="font-size: 12px;">附上截图：</span></p>\r\n<p style="margin-left: 30px;" align="left"><span style="font-size: 12px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img src="http://images2015.cnblogs.com/blog/748999/201511/748999-20151105232449883-1865977007.png" alt=""></span></p>\r\n<p style="margin-left: 30px;" align="left">&nbsp;</p>\r\n<ul>\r\n<li><span style="font-size: 15px; font-family: Microsoft YaHei;"><strong>运算符思维导图</strong></span></li>\r\n</ul>\r\n<p><span style="font-size: 15px; font-family: Microsoft YaHei;"><strong><img style="display: block; margin-left: auto; margin-right: auto;" src="http://images2015.cnblogs.com/blog/748999/201511/748999-20151105232554383-457577494.gif" alt=""></strong></span></p>\r\n<p style="margin-left: 30px;">&nbsp;</p></div><div id="MySignature" style="display: block;">谨以此记录自己学习的轨迹，沉淀积累知识的笔记。</div>', 1423843200, '/myworld/Uploads/images/09563T1A-4.jpg', '算数运算符有+、-、*、/、%、++、--、=、类似+=的运算符，其使用方式与编程语言(Java、C++、C#等)基本一样。给定 y=5，下面的表格解释了这些算术运算符：位运算符主要包括(~(非运算)、&(与运算)、|(或运算)、^(异或运算))。对boolean值进行的运算，与编程语言的运算方式基本一致。', 25, 0, 0, 2);
INSERT INTO `jk_article` (`aid`, `title`, `content`, `time`, `thumb`, `summary`, `click`, `istop`, `isdel`, `cid`) VALUES
(6, 'JavaScript基础5——关于ECMAscript的函数', '<div id="cnblogs_post_body"><ul>\r\n<li><strong><span style="font-family: Microsoft YaHei; font-size: 15px;">ECMAScript的函数概述</span></strong><span style="font-family: Microsoft YaHei; font-size: 13px;"><strong>(一般定义到&lt;head&gt;标签之间)</strong></span></li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">(1)定义函数，JavaScript一般有三种定义函数方法：<br>\r\n*第一种是使用function语句定义函数（静态方法）</span> </p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;">1</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> 函数名(var1,var2,...,varX)\r\n</span><span style="color: #008080;">2</span> <span style="color: #000000;">     {\r\n</span><span style="color: #008080;">3</span> \r\n<span style="color: #008080;">4</span>          代码．．．(<span style="color: #0000ff;">return</span><span style="color: #000000;">)\r\n</span><span style="color: #008080;">5</span> \r\n<span style="color: #008080;">6</span>      }</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;"><br>\r\n第二种是使用Function()构造函数来定义函数（不常用）<br></span></p>\r\n<div class="cnblogs_code">\r\n<pre><span style="color: #008080;">1</span> <span style="color: #0000ff;">var</span> 函数名 = <span style="color: #0000ff;">new</span><span style="color: #000000;"> Function(“参数1”，”参数2”，”参数3”……”函数体”);\r\n</span><span style="color: #008080;">2</span> <span style="color: #000000;">如：\r\n</span><span style="color: #008080;">3</span> <span style="color: #0000ff;">var</span> 函数名 = <span style="color: #0000ff;">new</span> Function(”x”,”y”,”<span style="color: #0000ff;">var</span> z=x+y;<span style="color: #0000ff;">return</span> z;”);</pre>\r\n</div>\r\n<p style="margin-left: 30px;">&nbsp;<span style="font-family: Microsoft YaHei; font-size: 13px;"><br>\r\n*第三种是在表达式中定义函数<br></span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;">1</span> <span style="color: #0000ff;">var</span> 函数名 = <span style="color: #0000ff;">function</span><span style="color: #000000;">(参数1，参数2，…){函数体};\r\n</span><span style="color: #008080;">2</span> <span style="color: #008000;">//</span><span style="color: #008000;">例如：</span>\r\n<span style="color: #008080;">3</span> <span style="color: #008000;">//</span><span style="color: #008000;">定义</span>\r\n<span style="color: #008080;">4</span> <span style="color: #0000ff;">var</span> add = <span style="color: #0000ff;">function</span><span style="color: #000000;">(a,b){\r\n</span><span style="color: #008080;">5</span> <span style="color: #0000ff;">return</span> a+<span style="color: #000000;">b;\r\n</span><span style="color: #008080;">6</span> <span style="color: #000000;">}\r\n</span><span style="color: #008080;">7</span> <span style="color: #008000;">//</span><span style="color: #008000;">调用函数</span>\r\n<span style="color: #008080;">8</span> document.write(add(50,20));</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;">&nbsp; </p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">(2)函数作用域：</span></span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 函数外面定义的变量是全局变量，<span style="font-family: Microsoft YaHei; font-size: 13px;">在整个HTML页面内都有效(生存期在整个HTML页面)。</span>，函数内可以直接使用。在函数内部没有使用var定义的，变量则为全局变量，*在函数内使用var关键字定义的变量是局部变量，即出了函数外边无法获取。js函数定义的参数没有默认值。（目前只有最新的火狐浏览器支持）<br></span></span></p>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">(3)如何调用函数：</span></span></span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008000;">//</span><span style="color: #008000;">sayHi函数</span>\r\n<span style="color: #0000ff;">function</span><span style="color: #000000;"> sayHi(sName, sMessage) {\r\n\r\n  alert(</span>"Hello " + sName +<span style="color: #000000;"> sMessage);\r\n\r\n}\r\n\r\n</span><span style="color: #008000;">//</span><span style="color: #008000;">调用上面的函数 sayHi()，会生成一个警告窗口</span>\r\nsayHi("David", " Nice to meet you!")</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-family: Microsoft YaHei; font-size: 13px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">(4)</span></span></span></span>函数如何返回值：</p>\r\n<div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">函数 sayHi() 未返回值，即使函数确实有值，也不必明确地声明它。该函数只需要使用 return 运算符后跟要返回的值即可。</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> sum(iNum1, iNum2) {\r\n</span><span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span>   <span style="color: #0000ff;">return</span> iNum1 +<span style="color: #000000;"> iNum2;\r\n</span><span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span> <span style="color: #000000;">}\r\n</span><span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span> <span style="color: #008000;">//</span><span style="color: #008000;">下面的代码把 sum 函数返回的值赋予一个变量：</span>\r\n<span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span> <span style="color: #0000ff;">var</span> iResult = sum(1,1<span style="color: #000000;">);\r\n</span><span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span> alert(iResult);    <span style="color: #008000;">//</span><span style="color: #008000;">输出 "2"</span></pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">另一个重要概念是，与在 Java 中一样，函数在执行过 return 语句后立即停止代码。因此，return 语句后的代码都不会被执行。</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;">1</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> sum(iNum1, iNum2) {\r\n</span><span style="color: #008080;">2</span> \r\n<span style="color: #008080;">3</span>   <span style="color: #0000ff;">return</span> iNum1 +<span style="color: #000000;"> iNum2;\r\n</span><span style="color: #008080;">4</span> <span style="color: #008000;">//</span><span style="color: #008000;">alert 窗口就不会显示出来</span>\r\n<span style="color: #008080;">5</span>   alert(iNum1 +<span style="color: #000000;"> iNum2);\r\n</span><span style="color: #008080;">6</span> \r\n<span style="color: #008080;">7</span> }</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">一个函数中可以有多个 return 语句，如下所示：</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> diff(iNum1, iNum2) {\r\n</span><span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span>   <span style="color: #0000ff;">if</span> (iNum1 &gt;<span style="color: #000000;"> iNum2) {\r\n</span><span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span>     <span style="color: #0000ff;">return</span> iNum1 -<span style="color: #000000;"> iNum2;\r\n</span><span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span>   } <span style="color: #0000ff;">else</span><span style="color: #000000;"> {\r\n</span><span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span>     <span style="color: #0000ff;">return</span> iNum2 -<span style="color: #000000;"> iNum1;\r\n</span><span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span> <span style="color: #000000;">  }\r\n</span><span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span> }</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">上面的函数用于返回两个数的差。要实现这一点，必须用较大的数减去较小的数，因此用 if 语句决定执行哪个 return 语句。</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">如果函数无返回值，那么可以调用没有参数的 return 运算符，随时退出函数。</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> sayHi(sMessage) {\r\n</span><span style="color: #008080;"> 2</span>   <span style="color: #0000ff;">if</span> (sMessage == "bye"<span style="color: #000000;">) {\r\n</span><span style="color: #008080;"> 3</span> \r\n<span style="color: #008080;"> 4</span>     <span style="color: #0000ff;">return</span><span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 5</span> \r\n<span style="color: #008080;"> 6</span> <span style="color: #000000;">  }\r\n</span><span style="color: #008080;"> 7</span> \r\n<span style="color: #008080;"> 8</span> <span style="color: #000000;">  alert(sMessage);\r\n</span><span style="color: #008080;"> 9</span> \r\n<span style="color: #008080;">10</span> <span style="color: #000000;">}\r\n</span><span style="color: #008080;">11</span> <span style="color: #008000;">//</span><span style="color: #008000;">这段代码中，如果 sMessage 等于 "bye"，就永远不显示警告框</span>\r\n<span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span> <span style="color: #008000;">//</span><span style="color: #008000;">注释：如果函数无明确的返回值，或调用了没有参数的 return 语句，那么它真正返回的值是 undefined。</span></pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n</div>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<ul>\r\n<li>\r\n<h1><strong><span style="font-family: Microsoft YaHei; font-size: 15px;">关于函数的arguments对象</span></strong></h1>\r\n</li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">在函数代码中，使用特殊对象 arguments，开发者无需明确指出参数名，就能访问它们。</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">例如，在函数 sayHi() 中，第一个参数是 message。用 arguments[0] 也可以访问这个值，即第一个参数的值（第一个参数位于位置 0，第二个参数位于位置 1，依此类推）。</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">因此，无需明确命名参数，就可以重写函数：</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;">1</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> sayHi() {\r\n</span><span style="color: #008080;">2</span>   <span style="color: #0000ff;">if</span> (arguments[0] == "bye"<span style="color: #000000;">) {\r\n</span><span style="color: #008080;">3</span>     <span style="color: #0000ff;">return</span><span style="color: #000000;">;\r\n</span><span style="color: #008080;">4</span> <span style="color: #000000;">  }\r\n</span><span style="color: #008080;">5</span>   alert(arguments[0<span style="color: #000000;">]);\r\n</span><span style="color: #008080;">6</span> }</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<div style="margin-left: 30px;">\r\n<h2 style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">1.检测参数个数</span></h2>\r\n<p><span style="font-family: Microsoft YaHei; font-size: 13px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 还可以用 arguments 对象检测函数的参数个数，引用属性 arguments.length 即可。下面的代码将输出每次调用函数使用的参数个数：</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> howManyArgs() {\r\n</span><span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span> <span style="color: #000000;">alert(arguments.length);\r\n</span><span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span> <span style="color: #000000;">}\r\n</span><span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span> howManyArgs("string", 45<span style="color: #000000;">);\r\n</span><span style="color: #008080;"> 8</span> <span style="color: #000000;">howManyArgs();\r\n</span><span style="color: #008080;"> 9</span> howManyArgs(12<span style="color: #000000;">);\r\n</span><span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span> <span style="color: #008000;">//</span><span style="color: #008000;">上面这段代码将依次显示 "2"、"0" 和 "1"。</span>\r\n<span style="color: #008080;">12</span> <span style="color: #008000;">//</span><span style="color: #008000;">与其他程序设计语言不同，ECMAScript 不会验证传递给函数的参数个数是否等于函数定义的参数个数。开发者定义的函数都可以接受任意个数的参数（根据 Netscape 的文档，最多可接受 25 个），而不会引发任何错误。任何遗漏的参数都会以 undefined 传递给函数，多余的函数将忽略。</span></pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p>&nbsp;</p>\r\n</div>\r\n<div style="margin-left: 30px;">\r\n<h2 style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">2.模拟函数重载</span></h2>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">用 arguments 对象判断传递给函数的参数个数，即可模拟函数重载：</span></p>\r\n</div>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> doAdd() {\r\n</span><span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span>   <span style="color: #0000ff;">if</span>(arguments.length == 1<span style="color: #000000;">) {\r\n</span><span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span>     alert(arguments[0] + 5<span style="color: #000000;">);\r\n</span><span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span>   } <span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span>(arguments.length == 2<span style="color: #000000;">) {\r\n</span><span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span>     alert(arguments[0] + arguments[1<span style="color: #000000;">]);\r\n</span><span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span> <span style="color: #000000;">  }\r\n</span><span style="color: #008080;">12</span> <span style="color: #000000;">}\r\n</span><span style="color: #008080;">13</span> doAdd(10);    <span style="color: #008000;">//</span><span style="color: #008000;">输出 "15"</span>\r\n<span style="color: #008080;">14</span> \r\n<span style="color: #008080;">15</span> doAdd(40, 20);    <span style="color: #008000;">//</span><span style="color: #008000;">输出 "60"</span>\r\n<span style="color: #008080;">16</span> \r\n<span style="color: #008080;">17</span> <span style="color: #008000;">//</span><span style="color: #008000;">当只有一个参数时，doAdd() 函数给参数加 5。如果有两个参数，则会把两个参数相加，返回它们的和。所以，doAdd(10) 输出的是 "15"，而 doAdd(40, 20) 输出的是 "60"。虽然不如重载那么好，不过已足以避开 ECMAScript 的这种限制。</span></pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<ul>\r\n<li>\r\n<h1><span style="font-family: Microsoft YaHei; font-size: 15px;"><strong>Function对象(类)</strong></span></h1>\r\n</li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">1. Function对象的使用</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">函数实际上是功能完整的对象。Function 类可以表示开发者定义的任何函数。用 Function 类直接创建函数的语法如下：var function_name = new function(arg1, arg2, ..., argN, function_body)。</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;html&gt;\r\n<span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span> &lt;head&gt;\r\n<span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span>      <span style="color: #0000ff;">var</span> sayHi = <span style="color: #0000ff;">new</span> Function("sName", "sMessage", "alert(\\"Hello \\" + sName + sMessage);"<span style="color: #000000;">);\r\n</span><span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span> &lt;/script&gt;\r\n<span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span> &lt;/head&gt;\r\n<span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span> \r\n<span style="color: #008080;">14</span> &lt;body&gt;\r\n<span style="color: #008080;">15</span> \r\n<span style="color: #008080;">16</span> &lt;script type="text/javascript" &gt;\r\n<span style="color: #008080;">17</span> \r\n<span style="color: #008080;">18</span>      sayHi("Jackie","Welcome here!");<span style="color: #008000;">//</span><span style="color: #008000;">调用函数</span>\r\n<span style="color: #008080;">19</span> \r\n<span style="color: #008080;">20</span> &lt;/script&gt;\r\n<span style="color: #008080;">21</span> \r\n<span style="color: #008080;">22</span> &lt;/body&gt;\r\n<span style="color: #008080;">23</span> \r\n<span style="color: #008080;">24</span> &lt;/html&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">尽管可以使用 Function 构造函数创建函数，但最好不要使用它，因为用它定义函数比用传统方式要慢得多。不过，所有函数都应看作 Function 类的实例。</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">2. 使用Function类的length属性</span></p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;html&gt;\r\n<span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span> &lt;head&gt;\r\n<span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span>      <span style="color: #0000ff;">function</span><span style="color: #000000;"> fun1(){}\r\n</span><span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span>      <span style="color: #0000ff;">function</span><span style="color: #000000;"> fun2(a1,a2){}\r\n</span><span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span>      <span style="color: #0000ff;">function</span><span style="color: #000000;"> fun3(a1,a2,a3,a4,a5,a6,a7){}\r\n</span><span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span> &lt;/script&gt;\r\n<span style="color: #008080;">14</span> \r\n<span style="color: #008080;">15</span> &lt;/head&gt;\r\n<span style="color: #008080;">16</span> \r\n<span style="color: #008080;">17</span>  \r\n<span style="color: #008080;">18</span> &lt;body&gt;\r\n<span style="color: #008080;">19</span> \r\n<span style="color: #008080;">20</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">21</span> \r\n<span style="color: #008080;">22</span>      document.write(fun1.length+" "+fun2.length+" "+<span style="color: #000000;">fun3.length);\r\n</span><span style="color: #008080;">23</span> \r\n<span style="color: #008080;">24</span> &lt;/script&gt;\r\n<span style="color: #008080;">25</span> \r\n<span style="color: #008080;">26</span> &lt;/body&gt;\r\n<span style="color: #008080;">27</span> \r\n<span style="color: #008080;">28</span> &lt;/html&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">使用Function的length属性可以得到函数的形参个数。</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">3. 使用Function类的valueOf()方法和toString()方法。这两个方法返回的都是函数的源代码，在调试时尤其有用。</span></p>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> &lt;html&gt;\r\n<span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span> &lt;head&gt;\r\n<span style="color: #008080;"> 4</span> \r\n<span style="color: #008080;"> 5</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> fun() {\r\n</span><span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span>   alert("Hi"<span style="color: #000000;">);\r\n</span><span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span> <span style="color: #000000;">}\r\n</span><span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span> &lt;/head&gt;\r\n<span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span> &lt;body&gt;\r\n<span style="color: #008080;">14</span> \r\n<span style="color: #008080;">15</span> &lt;script type="text/javascript"&gt;\r\n<span style="color: #008080;">16</span> \r\n<span style="color: #008080;">17</span>      document.write(fun.toString());<span style="color: #008000;">//</span><span style="color: #008000;">输出函数的源代码</span>\r\n<span style="color: #008080;">18</span> \r\n<span style="color: #008080;">19</span> &lt;/script&gt;\r\n<span style="color: #008080;">20</span> \r\n<span style="color: #008080;">21</span> &lt;/body&gt;\r\n<span style="color: #008080;">22</span> \r\n<span style="color: #008080;">23</span> &lt;/html&gt;</pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<ul>\r\n<li>\r\n<h1><span style="font-size: 15px;"><strong><span style="font-family: Microsoft YaHei;">闭包</span></strong></span></h1>\r\n</li>\r\n</ul>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">ECMAScript 最易让人误解的一点是，它支持闭包（closure）。闭包，指的是词法表示包括不被计算的变量的函数，也就是说，函数可以使用函数之外定义的变量。</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">1.简单的闭包实例</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">在 ECMAScript 中使用全局变量是一个简单的闭包实例。请思考下面这段代码：</span></p>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;">1</span> <span style="color: #0000ff;">var</span> sMessage = "hello world"<span style="color: #000000;">; \r\n</span><span style="color: #008080;">2</span> \r\n<span style="color: #008080;">3</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> sayHelloWorld() {\r\n</span><span style="color: #008080;">4</span> \r\n<span style="color: #008080;">5</span>  alert(sMessage);<span style="color: #008000;">//</span><span style="color: #008000;">使用函数之外定义的变量</span>\r\n<span style="color: #008080;">6</span> \r\n<span style="color: #008080;">7</span> <span style="color: #000000;"> } \r\n</span><span style="color: #008080;">8</span> \r\n<span style="color: #008080;">9</span> sayHelloWorld(); </pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">在上面这段代码中，脚本被载入内存后，并没有为函数 sayHelloWorld() 计算变量 sMessage 的值。该函数捕获 sMessage 的值只是为了以后的使用，也就是说，解释程序知道在调用该函数时要检查 sMessage 的值。sMessage 将在函数调用 sayHelloWorld() 时（最后一行）被赋值，显示消息 "hello world"。</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">2.复杂的闭包实例</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">在一个函数中定义另一个会使闭包变得更加复杂。例如：</span></p>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div>\r\n<pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">var</span> iBaseNum = 10<span style="color: #000000;">; \r\n</span><span style="color: #008080;"> 2</span> \r\n<span style="color: #008080;"> 3</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> addNum(iNum1, iNum2) {\r\n</span><span style="color: #008080;"> 4</span>  \r\n<span style="color: #008080;"> 5</span>     <span style="color: #0000ff;">function</span><span style="color: #000000;"> doAdd() { \r\n</span><span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span>           <span style="color: #0000ff;">return</span> iNum1 + iNum2 +<span style="color: #000000;"> iBaseNum; \r\n</span><span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9     </span> <span style="color: #000000;">} \r\n</span><span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span>     <span style="color: #0000ff;">return</span><span style="color: #000000;"> doAdd();\r\n</span><span style="color: #008080;">12</span>  \r\n<span style="color: #008080;">13</span> } </pre>\r\n<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码"></a></span></div></div>\r\n<p style="margin-left: 30px;">&nbsp;</p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">这里，函数 addNum() 包括函数 doAdd() （闭包）。内部函数是一个闭包，因为它将获取外部函数的参数 iNum1 和 iNum2 以及全局变量 iBaseNum 的值。 addNum() 的最后一步调用了 doAdd()，把两个参数和全局变量相加，并返回它们的和。</span></p>\r\n<p style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">这里要掌握的重要概念是，doAdd() 函数根本不接受参数，它使用的值是从执行环境中获取的。可以看到，闭包是 ECMAScript 中非常强大多用的一部分，可用于执行复杂的计算。</span></p>\r\n<p class="tip" style="margin-left: 30px;"><span style="font-family: Microsoft YaHei; font-size: 13px;">提示：就像使用任何高级函数一样，使用闭包要小心，因为它们可能会变得非常复杂。</span></p>\r\n<ul>\r\n<li class="tip">\r\n<h1><span style="font-size: 15px;"><strong><span style="font-family: Microsoft YaHei;">JavaScript函数的思维导图</span></strong></span></h1>\r\n</li>\r\n</ul>\r\n<p><span style="font-size: 15px;"><strong><span style="font-family: Microsoft YaHei;"><img src="http://images2015.cnblogs.com/blog/748999/201511/748999-20151107231208336-1477780662.gif" alt=""></span></strong></span></p></div>', 1428940800, '/myworld/Uploads/images/09563T1A-4.jpg', '函数外面定义的变量是全局变量，在整个HTML页面内都有效(生存期在整个HTML页面)。，函数内可以直接使用。在函数内部没有使用var定义的，变量则为全局变量，*在函数内使用var关键字定义的变量是局部变量，即出了函数外边无法获取。js函数定义的参数没有默认值。（目前只有最新的火狐浏览器支持）', 25, 1, 0, 2);
INSERT INTO `jk_article` (`aid`, `title`, `content`, `time`, `thumb`, `summary`, `click`, `istop`, `isdel`, `cid`) VALUES
(7, '留言本小实验', '<div id="cnblogs_post_body"><style><!--\r\np{ \r\n  text-indent:2em; \r\n  padding:0px; \r\n  margin:0px; \r\n}\r\n--></style>\r\n<h4>实验目的：</h4>\r\n<p>利用PHP实现发布留言，并存在txt文本文件中，还可以从文本文件中读取留言，并显示在网页上。</p>\r\n<h4>实验代码：</h4>\r\n<p>先要用个表单提交留言，写一个简单的html如下：</p>\r\n<div class="cnblogs_code" onclick="cnblogs_code_show(''65a5259d-ab67-45c7-95ec-d0f805b9d8d8'')"><img id="code_img_closed_65a5259d-ab67-45c7-95ec-d0f805b9d8d8" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""><img id="code_img_opened_65a5259d-ab67-45c7-95ec-d0f805b9d8d8" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide(''65a5259d-ab67-45c7-95ec-d0f805b9d8d8'',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt="">\r\n<div id="cnblogs_code_open_65a5259d-ab67-45c7-95ec-d0f805b9d8d8" class="cnblogs_code_hide">\r\n<pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">&lt;!</span><span style="color: #ff00ff;">DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"</span><span style="color: #0000ff;">&gt;</span>\r\n<span style="color: #008080;"> 2</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">html </span><span style="color: #ff0000;">xmlns</span><span style="color: #0000ff;">="http://www.w3.org/1999/xhtml"</span><span style="color: #ff0000;"> xml:lang</span><span style="color: #0000ff;">="en"</span><span style="color: #0000ff;">&gt;</span>\r\n<span style="color: #008080;"> 3</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>\r\n<span style="color: #008080;"> 4</span>     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">meta </span><span style="color: #ff0000;">http-equiv</span><span style="color: #0000ff;">="Content-Type"</span><span style="color: #ff0000;"> content</span><span style="color: #0000ff;">="text/html;charset=UTF-8"</span><span style="color: #0000ff;">&gt;</span>\r\n<span style="color: #008080;"> 5</span>     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">title</span><span style="color: #0000ff;">&gt;</span>表单提交<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">title</span><span style="color: #0000ff;">&gt;</span>\r\n<span style="color: #008080;"> 6</span> <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>\r\n<span style="color: #008080;"> 7</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span>\r\n<span style="color: #008080;"> 8</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form </span><span style="color: #ff0000;">action</span><span style="color: #0000ff;">="postMsg.php"</span><span style="color: #ff0000;"> method</span><span style="color: #0000ff;">="post"</span><span style="color: #0000ff;">&gt;</span>\r\n<span style="color: #008080;"> 9</span>     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">p</span><span style="color: #0000ff;">&gt;</span>留言标题:<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="text"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="title"</span> <span style="color: #0000ff;">/&gt;&lt;/</span><span style="color: #800000;">p</span><span style="color: #0000ff;">&gt;</span>\r\n<span style="color: #008080;">10</span>     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">p</span><span style="color: #0000ff;">&gt;</span>留言内容:<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">textarea </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="content"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">=""</span><span style="color: #ff0000;"> cols</span><span style="color: #0000ff;">="30"</span><span style="color: #ff0000;"> rows</span><span style="color: #0000ff;">="10"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">textarea</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">p</span><span style="color: #0000ff;">&gt;</span>\r\n<span style="color: #008080;">11</span>     <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">p</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="submit"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="提交"</span> <span style="color: #0000ff;">/&gt;&lt;/</span><span style="color: #800000;">p</span><span style="color: #0000ff;">&gt;</span>\r\n<span style="color: #008080;">12</span> <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">form</span><span style="color: #0000ff;">&gt;</span>\r\n<span style="color: #008080;">13</span>     \r\n<span style="color: #008080;">14</span> <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span>\r\n<span style="color: #008080;">15</span> \r\n<span style="color: #008080;">16</span> <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">html</span><span style="color: #0000ff;">&gt;</span></pre>\r\n</div>\r\n<span class="cnblogs_code_collapse">postMsg.html</span></div>\r\n<p>然后提交的数据到哪里呢，action="postMsg.php"表明提交给postMsg.php，然后再处理提交过来的数据，处理过程如下代码注释部分：</p>\r\n<div class="cnblogs_code" onclick="cnblogs_code_show(''e9a7f33b-fe8a-4daa-95d9-649c9794f168'')"><img id="code_img_closed_e9a7f33b-fe8a-4daa-95d9-649c9794f168" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""><img id="code_img_opened_e9a7f33b-fe8a-4daa-95d9-649c9794f168" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide(''e9a7f33b-fe8a-4daa-95d9-649c9794f168'',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt="">\r\n<div id="cnblogs_code_open_e9a7f33b-fe8a-4daa-95d9-649c9794f168" class="cnblogs_code_hide">\r\n<pre><span style="color: #008080;"> 1</span> &lt;?<span style="color: #000000;">php \r\n</span><span style="color: #008080;"> 2</span> <span style="color: #008080;">header</span>("Content-Type:text/html; charset=utf-8");<span style="color: #008000;">//</span><span style="color: #008000;">设置页面内容是html编码格式是utf-8\r\n</span><span style="color: #008080;"> 3</span> \r\n<span style="color: #008080;"> 4</span> <span style="color: #008000;">// print_r($_POST);\r\n</span><span style="color: #008080;"> 5</span> \r\n<span style="color: #008080;"> 6</span> <span style="color: #008000;">//开始留言\r\n</span><span style="color: #008080;"> 7</span> <span style="color: #008000;">//定义存储格式，以字符串“title,content”形式存储在文本文档上</span>\r\n<span style="color: #008080;"> 8</span> <span style="color: #800080;">$str</span> = <span style="color: #800080;">$_POST</span>[''title''] . "," . <span style="color: #800080;">$_POST</span>[''content''] . "\\n"<span style="color: #000000;">;\r\n</span><span style="color: #008080;"> 9</span> \r\n<span style="color: #008080;">10</span> <span style="color: #008000;">//</span><span style="color: #008000;">php打开文件\r\n</span><span style="color: #008080;">11</span> <span style="color: #008000;">//fh是一个变量，为资源类型的变量</span>\r\n<span style="color: #008080;">12</span> <span style="color: #800080;">$fh</span> = <span style="color: #008080;">fopen</span>(''./msg.txt'', ''a''<span style="color: #000000;">);\r\n</span><span style="color: #008080;">13</span> \r\n<span style="color: #008080;">14</span> <span style="color: #008000;">//</span><span style="color: #008000;">往文件里写东西，沿着管子(资源)写</span>\r\n<span style="color: #008080;">15</span> <span style="color: #008080;">fwrite</span>(<span style="color: #800080;">$fh</span>,<span style="color: #800080;">$str</span><span style="color: #000000;">);\r\n</span><span style="color: #008080;">16</span> \r\n<span style="color: #008080;">17</span> <span style="color: #008000;">//</span><span style="color: #008000;">关闭资源</span>\r\n<span style="color: #008080;">18</span> <span style="color: #008080;">fclose</span>(<span style="color: #800080;">$fh</span><span style="color: #000000;">);\r\n</span><span style="color: #008080;">19</span> \r\n<span style="color: #008080;">20</span> <span style="color: #008000;">//</span><span style="color: #008000;">提示留言成功，并有个返回按钮</span>\r\n<span style="color: #008080;">21</span> <span style="color: #0000ff;">echo</span> "留言成功" ,"\\n" , ''&lt;input type="button"  value="返回"  onclick="JavaScript:history.go(-1)" &gt;''<span style="color: #000000;">;\r\n</span><span style="color: #008080;">22</span> \r\n<span style="color: #008080;">23</span>  ?&gt;</pre>\r\n</div>\r\n<span class="cnblogs_code_collapse">postMsg.php</span></div>\r\n<p>这样就能在当前文件下的msg.txt文本文件下看到留言。</p>\r\n<p>接下来就是如何读取留言了，在msg.php中遍历整个留言本，并显示出来，最好都加上链接，点进去直接进入留言查看留言内容：</p>\r\n<div class="cnblogs_code" onclick="cnblogs_code_show(''0ee9c347-e42f-4ac0-9403-7d3da92d45b8'')"><img id="code_img_closed_0ee9c347-e42f-4ac0-9403-7d3da92d45b8" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""><img id="code_img_opened_0ee9c347-e42f-4ac0-9403-7d3da92d45b8" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide(''0ee9c347-e42f-4ac0-9403-7d3da92d45b8'',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt="">\r\n<div id="cnblogs_code_open_0ee9c347-e42f-4ac0-9403-7d3da92d45b8" class="cnblogs_code_hide">\r\n<pre><span style="color: #008080;"> 1</span> &lt;?<span style="color: #000000;">php \r\n</span><span style="color: #008080;"> 2</span> <span style="color: #008080;">header</span>("Content-Type:text/html; charset=utf-8");<span style="color: #008000;">//</span><span style="color: #008000;">设置页面内容是html编码格式是utf-8\r\n</span><span style="color: #008080;"> 3</span> \r\n<span style="color: #008080;"> 4</span> <span style="color: #008000;">//定义变量tid，表示留言的序号</span>\r\n<span style="color: #008080;"> 5</span> <span style="color: #800080;">$tid</span> = <span style="color: #800080;">$_GET</span>[''tid''<span style="color: #000000;">];\r\n</span><span style="color: #008080;"> 6</span> \r\n<span style="color: #008080;"> 7</span> <span style="color: #008000;">//</span><span style="color: #008000;"> echo ''你想看第'' ,$tid,''行留言'';\r\n</span><span style="color: #008080;"> 8</span> \r\n<span style="color: #008080;"> 9</span> <span style="color: #008000;">//打开得到文件</span>\r\n<span style="color: #008080;">10</span> <span style="color: #800080;">$fh</span> = <span style="color: #008080;">fopen</span>(''./msg.txt'' , ''r''<span style="color: #000000;">);\r\n</span><span style="color: #008080;">11</span> \r\n<span style="color: #008080;">12</span> <span style="color: #800080;">$i</span> = 1<span style="color: #000000;">;\r\n</span><span style="color: #008080;">13</span> <span style="color: #008000;">//</span><span style="color: #008000;">以列表形式遍历，并显示留言标题</span>\r\n<span style="color: #008080;">14</span> <span style="color: #0000ff;">echo</span> ''&lt;ol&gt;''<span style="color: #000000;">;\r\n</span><span style="color: #008080;">15</span> <span style="color: #0000ff;">while</span>((<span style="color: #800080;">$row</span>=<span style="color: #008080;">fgetcsv</span>(<span style="color: #800080;">$fh</span>)) != <span style="color: #0000ff;">false</span><span style="color: #000000;">) {\r\n</span><span style="color: #008080;">16</span> \r\n<span style="color: #008080;">17</span>     <span style="color: #0000ff;">echo</span> ''&lt;li&gt;&lt;a href="readMsg.php?tid='' , <span style="color: #800080;">$i</span> ,''"&gt;'' , <span style="color: #800080;">$row</span>[0] , ''&lt;/li&gt;''<span style="color: #000000;">;\r\n</span><span style="color: #008080;">18</span>     <span style="color: #800080;">$i</span> ++<span style="color: #000000;">; \r\n</span><span style="color: #008080;">19</span> <span style="color: #000000;">}\r\n</span><span style="color: #008080;">20</span> <span style="color: #0000ff;">echo</span> ''&lt;/ol&gt;''<span style="color: #000000;">;\r\n</span><span style="color: #008080;">21</span> \r\n<span style="color: #008080;">22</span>  ?&gt;</pre>\r\n</div>\r\n<span class="cnblogs_code_collapse">msg.php</span></div>\r\n<p>最后是读取留言了：</p>\r\n<div class="cnblogs_code" onclick="cnblogs_code_show(''5e9aa888-5ee0-4e89-a959-25a1c38ccf87'')"><img id="code_img_closed_5e9aa888-5ee0-4e89-a959-25a1c38ccf87" class="code_img_closed" src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""><img id="code_img_opened_5e9aa888-5ee0-4e89-a959-25a1c38ccf87" class="code_img_opened" style="display: none;" onclick="cnblogs_code_hide(''5e9aa888-5ee0-4e89-a959-25a1c38ccf87'',event)" src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt="">\r\n<div id="cnblogs_code_open_5e9aa888-5ee0-4e89-a959-25a1c38ccf87" class="cnblogs_code_hide">\r\n<pre><span style="color: #008080;"> 1</span> &lt;?<span style="color: #000000;">php \r\n</span><span style="color: #008080;"> 2</span> <span style="color: #008080;">header</span>("Content-Type:text/html; charset=utf-8"<span style="color: #000000;">);\r\n</span><span style="color: #008080;"> 3</span> \r\n<span style="color: #008080;"> 4</span> <span style="color: #800080;">$tid</span> = <span style="color: #800080;">$_GET</span>[''tid''<span style="color: #000000;">];\r\n</span><span style="color: #008080;"> 5</span> \r\n<span style="color: #008080;"> 6</span> <span style="color: #008000;">//</span><span style="color: #008000;"> echo ''你想看第'' ,$tid,''行留言'';\r\n</span><span style="color: #008080;"> 7</span> \r\n<span style="color: #008080;"> 8</span> <span style="color: #008000;">//打开得到文件</span>\r\n<span style="color: #008080;"> 9</span> <span style="color: #800080;">$fh</span> = <span style="color: #008080;">fopen</span>(''./msg.txt'' , ''r''<span style="color: #000000;">);\r\n</span><span style="color: #008080;">10</span> \r\n<span style="color: #008080;">11</span> <span style="color: #800080;">$i</span> = 1<span style="color: #000000;">;\r\n</span><span style="color: #008080;">12</span> \r\n<span style="color: #008080;">13</span> <span style="color: #0000ff;">while</span>((<span style="color: #800080;">$row</span>=<span style="color: #008080;">fgetcsv</span>(<span style="color: #800080;">$fh</span>)) != <span style="color: #0000ff;">false</span><span style="color: #000000;">) {\r\n</span><span style="color: #008080;">14</span> \r\n<span style="color: #008080;">15</span>     <span style="color: #0000ff;">if</span>(<span style="color: #800080;">$i</span> == <span style="color: #800080;">$tid</span><span style="color: #000000;">){\r\n</span><span style="color: #008080;">16</span>         <span style="color: #0000ff;">echo</span> ''&lt;h1&gt;'' , <span style="color: #800080;">$row</span>[0] , ''&lt;/h1&gt;''<span style="color: #000000;">;\r\n</span><span style="color: #008080;">17</span>         <span style="color: #0000ff;">echo</span> ''&lt;p&gt;'' , <span style="color: #800080;">$row</span>[1] , ''&lt;/p&gt;''<span style="color: #000000;">;\r\n</span><span style="color: #008080;">18</span> <span style="color: #000000;">    }\r\n</span><span style="color: #008080;">19</span>     <span style="color: #800080;">$i</span> ++<span style="color: #000000;">;\r\n</span><span style="color: #008080;">20</span> <span style="color: #000000;">}\r\n</span><span style="color: #008080;">21</span> \r\n<span style="color: #008080;">22</span>  ?&gt;</pre>\r\n</div>\r\n<span class="cnblogs_code_collapse">readMsg.php</span></div>\r\n<h4>实验总结：</h4>\r\n<ol>\r\n<li>关于$_POST和$_GET区别：<br>\r\n<p><strong>$_GET</strong><br>\r\n就是地址传值,用 ''?'' 开始传值,多个值间用 ''&amp;'' 号分隔,多用于简单的传值,比如说看新闻需要新闻id一般就会用地址传值,$_GET的好处是传值可见,也就是只要一个地址就ok了,容易分享,缺点是不安全,而且有限制字节数.</p>\r\n<p><strong>$_POST</strong><br>\r\n这种提交方式不可见,也就是传的值不会出现在URL地址中,一般用于注册和登录,这种方式因为要安全要高一点,一般会用POST方式,而且POST方式没有限制字节数,填写文章,需要提交大数据的,表单中含有上传文件的,都会使用POST.</p>\r\n\r\n\r\n\r\n</li>\r\n<li>fopen(),fwrite()和fclose()函数：<br>\r\n<p><strong>fopen()</strong>函数打开文件或者URL.如果打开失败,本函数返回FALSE.语法为：fopen(filename,mode,include_path,context),具体参见<a href="http://www.w3school.com.cn/php/func_filesystem_fopen.asp">PHP fopen() 函数</a></p>\r\n<p><strong>fwrite()</strong>函数写入文件(可安全用于二进制文件).语法为：fwrite(file,string,length),具体参见<a href="http://www.w3school.com.cn/php/func_filesystem_fwrite.asp">PHP fwrite() 函数</a></p>\r\n<p><strong>fclose()</strong>函数关闭一个打开文件.语法为：fclose(file),具体参见<a href="http://www.w3school.com.cn/php/func_filesystem_fclose.asp">PHP fclose() 函数</a></p>\r\n\r\n\r\n\r\n</li>\r\n<li>fgetcsv()函数<br>\r\n<p><strong>fgetcsv()</strong>函数从文件指针中读入一行并解析 CSV 字段。与 fgets() 类似，不同的是 fgetcsv() 解析读入的行并找出 CSV 格式的字段，然后返回一个包含这些字段的数组。 fgetcsv() 出错时返回 FALSE，包括碰到文件结束时。语法为：fgetcsv(file,length,separator,enclosure)，具体参见<a href="http://www.w3school.com.cn/php/func_filesystem_fgetcsv.asp">PHP fgetcsv() 函数</a></p>\r\n</li>\r\n<li>这个实验还存在很多bug，功能也不是很完善，只是PHP入门的小实验，谨以此作为自己学习的轨迹。\r\n<p>&nbsp;</p>\r\n\r\n\r\n\r\n</li>\r\n\r\n\r\n\r\n</ol></div>', 1445097600, '/myworld/Uploads/images/u=1499900825,876847483&fm=21&gp=0.jpg', 'fopen()函数打开文件或者URL.如果打开失败,本函数返回FALSE.语法为：fopen(filename,mode,include_path,context),具体参见PHP fopen() 函数\r\n\r\nfwrite()函数写入文件(可安全用于二进制文件).语法为：fwrite(file,string,length),具体参见PHP fwrite() 函数\r\n\r\n', 20, 0, 0, 7),
(10, '啊啊啊', '&lt;p&gt;安静安静安静安静AAS &amp;nbsp;按时按时&lt;img src=&quot;/myworld/Uploads/articles/20160617/5762ece8e7d15.jpg&quot; title=&quot;97871113766132243742-fm.jpg&quot;/&gt;&lt;/p&gt;', 1466100973, '/myworld/Uploads/articles/5762eccc539fc.jpg', '啊啊啊啊啊', 12, 1, 1, 4),
(11, '啊啊啊', '&lt;p&gt;爱的啊啊的爱的爱的&lt;img src=&quot;/myworld/Uploads/articles/20160617/5762f39890177.jpg&quot; title=&quot;f26c5b5d05_feae09c1-8f0f-3e04-9374-61ac95a3aeda.jpg&quot;/&gt;&lt;/p&gt;', 1466102684, '/myworld/Uploads/articles/5762f3810ceed.jpg', '达到', 11, 0, 1, 4),
(12, '上海市', '&lt;p&gt;对对对&lt;img src=&quot;/myworld/Uploads/articles/20160617/5763635c07f99.jpg&quot; title=&quot;97871113766132243742-fm.jpg&quot;/&gt;&lt;/p&gt;', 1466131294, '/myworld/Uploads/articles/57636329103f9.jpg', '分方法', 11, 1, 0, 2);

-- --------------------------------------------------------

--
-- 表的结构 `jk_category`
--

DROP TABLE IF EXISTS `jk_category`;
CREATE TABLE IF NOT EXISTS `jk_category` (
  `cid` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
  `cname` varchar(20) NOT NULL DEFAULT '' COMMENT '栏目名称',
  `keywords` varchar(255) NOT NULL DEFAULT '' COMMENT '关键字',
  `description` varchar(255) NOT NULL DEFAULT '' COMMENT '描述',
  `isoff` tinyint(1) UNSIGNED NOT NULL DEFAULT '1' COMMENT '1为正常，0为关闭',
  `bname` varchar(20) NOT NULL DEFAULT '' COMMENT '分类别名',
  `sort` int(10) UNSIGNED NOT NULL DEFAULT '1' COMMENT '排序',
  PRIMARY KEY (`cid`)
) ENGINE=MyISAM AUTO_INCREMENT=21 DEFAULT CHARSET=utf8 COMMENT='类目表';

--
-- 转存表中的数据 `jk_category`
--

INSERT INTO `jk_category` (`cid`, `cname`, `keywords`, `description`, `isoff`, `bname`, `sort`) VALUES
(12, 'photoshop学习', 'photoshop，设计，平面设计，网页设计', 'photoshop使用过程中遇到的问题及知识点总结', 1, 'photoshop', 5),
(11, 'thinkphp学习', 'php,thinkphp,php框架', '对thinkphp的使用过程中遇到问题的总结', 1, 'thinkphp', 2),
(2, 'JavaScript学习', 'Java，JavaScript , JS , jquery,angular,react,nodejs', '整理javascript相关的知识和经验', 1, 'JavaScript', 1),
(3, 'Html学习', 'Html,表签，网页结构', '整理Html相关的知识和经验', 1, 'Html', 3),
(4, 'CSS学习', 'CSS,样式,网页表现', '整理CSS相关的知识和经验', 1, 'CSS', 3),
(5, 'Html5学习', 'Html5，canvas，新一代W3C标准', '整理Html5相关的知识和经验', 1, 'Html5', 4),
(6, 'CSS3学习', 'CSS3，样式，动画，过渡，2D变换，旋转', '整理CSS3相关的知识和经验', 1, 'CSS3', 4),
(7, 'PHP学习', 'PHP', '整理PHP相关的知识和经验', 1, 'PHP', 2),
(8, 'MySQL', 'MySQL，SQL语句', '整理MySQL相关的知识和经验', 1, 'MySQL', 3),
(9, 'jquery', 'jquery，js库，js框架', '整理jquery相关的知识和经验', 1, 'jquery', 4);

-- --------------------------------------------------------

--
-- 表的结构 `jk_comment`
--

DROP TABLE IF EXISTS `jk_comment`;
CREATE TABLE IF NOT EXISTS `jk_comment` (
  `comid` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
  `nickname` varchar(48) NOT NULL DEFAULT '' COMMENT '用户昵称',
  `time` int(10) UNSIGNED NOT NULL DEFAULT '0' COMMENT '评论时间',
  `content` varchar(255) NOT NULL DEFAULT '' COMMENT '评论内容',
  `reply` varchar(255) NOT NULL DEFAULT '' COMMENT '回复内容',
  `aid` int(10) UNSIGNED NOT NULL COMMENT '所属文章id',
  `uid` int(10) UNSIGNED NOT NULL COMMENT '所属用户id',
  PRIMARY KEY (`comid`),
  KEY `fk_jk_comment_jk_article1_idx` (`aid`),
  KEY `fk_jk_comment_jk_user1_idx` (`uid`)
) ENGINE=MyISAM AUTO_INCREMENT=17 DEFAULT CHARSET=utf8 COMMENT='评论表';

--
-- 转存表中的数据 `jk_comment`
--

INSERT INTO `jk_comment` (`comid`, `nickname`, `time`, `content`, `reply`, `aid`, `uid`) VALUES
(1, '刘晗', 1460908800, '分析清楚数据表之前的关联关系后，我们才可以进行关联定义和关联操作。', '嗯嗯，好的呢', 2, 6),
(2, '汪敏杰', 1461081600, 'JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言，最早是在HTML（标准通用标记语言下的一个应用）网页上使用，用来给HTML网页增加动态功能。', '哦', 2, 4),
(3, '张艺兴', 1463673600, '哎呦，不错嘛', '啊', 2, 22),
(4, '鹿晗', 1463673601, '哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈', '什么啊', 2, 19),
(5, '清风一侠', 1465917916, '文明上网，理性发言！', '好的啊', 2, 1),
(6, '清风一侠', 1465918431, '你叫什么名字？', '我叫清风一侠', 2, 1),
(7, '清风一侠', 1465918581, '你叫什么名字？', '我叫清风一侠', 2, 1),
(8, '清风一侠', 1465918610, 'test，test，test', '好吧', 2, 1),
(9, '清风一侠', 1465990594, '你好，test', 'test,too', 6, 1),
(11, '清风一侠', 1466078807, 'sb', '', 6, 2),
(12, '谢群', 1466101264, '撒的风格都是多学点', '', 10, 2),
(13, '谢群', 1466101308, '是是是', '', 10, 2),
(14, '谢群', 1466101706, '是是是', '', 2, 2),
(15, '谢群', 1466101714, '是是是是', '大动干戈', 2, 2);

-- --------------------------------------------------------

--
-- 表的结构 `jk_experience`
--

DROP TABLE IF EXISTS `jk_experience`;
CREATE TABLE IF NOT EXISTS `jk_experience` (
  `exid` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
  `title` varchar(45) NOT NULL DEFAULT '' COMMENT '经历标题',
  `time` date NOT NULL DEFAULT '1970-01-01' COMMENT '经历时间',
  `content` text NOT NULL COMMENT '经历介绍',
  `photoUrl` varchar(255) NOT NULL DEFAULT '' COMMENT '经历照片地址',
  `infoid` int(10) UNSIGNED NOT NULL COMMENT '所属用户资料id',
  PRIMARY KEY (`exid`),
  KEY `fk_jk_experience_jk_user_info1_idx` (`infoid`)
) ENGINE=MyISAM AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COMMENT='个人经历';

--
-- 转存表中的数据 `jk_experience`
--

INSERT INTO `jk_experience` (`exid`, `title`, `time`, `content`, `photoUrl`, `infoid`) VALUES
(4, '唱冷了，昨日的记号', '2016-04-07', '<p>一身白衣为你洗尽铅华，白衣白发白胜雪，捧一卷古墨，盈袭暗香，我踏着平平仄仄的长长短短，款款步入风情万种的宋词里。溪边桃红青染，流水潺潺，柳丝随风絮，我在桃花下写着红笺小字，一抹嫣然回眸，惊落了桃花，也惊落了你的心。佛说千年一轮回，今生，你在哪里？\r\n						<p>可能，遇到对的你，就想把压抑在心底话语，全部诉说；可能，遇到对的你，希望你来安抚我的心，那会舒心；可能，遇到对的你，我想把我心底话对你说，让你懂我……一切的一切，是因为遇见你。</p><p>一直觉得，若能找一静僻之地，静心，静悟，静静思考，时时看看美丽的苍穹，时而品品手中的香茗，时而挥洒手中的笔墨，时而让钢笔在纸上舞动，在配以安静的乐曲，静静的，静静的，想想白天，想想生活，想想每一个人，那就好了。</p><p>轻轻拂去岁月的尘埃，打开历久弥新的宋词，氤氲在词中的聚散离合、爱恨情仇，浓得像一杯化不开的咖啡。</p><p>一直觉得，若能找一静僻之地，静心，静悟，静静思考，时时看看美丽的苍穹，时而品品手中的香茗，时而挥洒手中的笔墨，时而让钢笔在纸上舞动，在配以安静的乐曲，静静的，静静的，想想白天，想想生活，想想每一个人，那就好了。</p><p>轻轻拂去岁月的尘埃，打开历久弥新的宋词，氤氲在词中的聚散离合、爱恨情仇，浓得像一杯化不开的咖啡。</p></p>', '/myworld/Uploads/experiences/5761268fca8f8.png', 1),
(1, '洗净一身铅华', '2016-05-20', '<p>一身白衣为你洗尽铅华，白衣白发白胜雪，捧一卷古墨，盈袭暗香，我踏着平平仄仄的长长短短，款款步入风情万种的宋词里。溪边桃红青染，流水潺潺，柳丝随风絮，我在桃花下写着红笺小字，一抹嫣然回眸，惊落了桃花，也惊落了你的心。佛说千年一轮回，今生，你在哪里？\r\n						<p>可能，遇到对的你，就想把压抑在心底话语，全部诉说；可能，遇到对的你，希望你来安抚我的心，那会舒心；可能，遇到对的你，我想把我心底话对你说，让你懂我……一切的一切，是因为遇见你。</p><p>一直觉得，若能找一静僻之地，静心，静悟，静静思考，时时看看美丽的苍穹，时而品品手中的香茗，时而挥洒手中的笔墨，时而让钢笔在纸上舞动，在配以安静的乐曲，静静的，静静的，想想白天，想想生活，想想每一个人，那就好了。</p><p>轻轻拂去岁月的尘埃，打开历久弥新的宋词，氤氲在词中的聚散离合、爱恨情仇，浓得像一杯化不开的咖啡。</p><p>一直觉得，若能找一静僻之地，静心，静悟，静静思考，时时看看美丽的苍穹，时而品品手中的香茗，时而挥洒手中的笔墨，时而让钢笔在纸上舞动，在配以安静的乐曲，静静的，静静的，想想白天，想想生活，想想每一个人，那就好了。</p><p>轻轻拂去岁月的尘埃，打开历久弥新的宋词，氤氲在词中的聚散离合、爱恨情仇，浓得像一杯化不开的咖啡。</p></p>', '/myworld/Uploads/experiences/576125a398d37.png', 1),
(5, '记得你叫我忘了吧', '2016-03-30', '<p>一身白衣为你洗尽铅华，白衣白发白胜雪，捧一卷古墨，盈袭暗香，我踏着平平仄仄的长长短短，款款步入风情万种的宋词里。溪边桃红青染，流水潺潺，柳丝随风絮，我在桃花下写着红笺小字，一抹嫣然回眸，惊落了桃花，也惊落了你的心。佛说千年一轮回，今生，你在哪里？\r\n						<p>可能，遇到对的你，就想把压抑在心底话语，全部诉说；可能，遇到对的你，希望你来安抚我的心，那会舒心；可能，遇到对的你，我想把我心底话对你说，让你懂我……一切的一切，是因为遇见你。</p><p>一直觉得，若能找一静僻之地，静心，静悟，静静思考，时时看看美丽的苍穹，时而品品手中的香茗，时而挥洒手中的笔墨，时而让钢笔在纸上舞动，在配以安静的乐曲，静静的，静静的，想想白天，想想生活，想想每一个人，那就好了。</p><p>轻轻拂去岁月的尘埃，打开历久弥新的宋词，氤氲在词中的聚散离合、爱恨情仇，浓得像一杯化不开的咖啡。</p><p>一直觉得，若能找一静僻之地，静心，静悟，静静思考，时时看看美丽的苍穹，时而品品手中的香茗，时而挥洒手中的笔墨，时而让钢笔在纸上舞动，在配以安静的乐曲，静静的，静静的，想想白天，想想生活，想想每一个人，那就好了。</p><p>轻轻拂去岁月的尘埃，打开历久弥新的宋词，氤氲在词中的聚散离合、爱恨情仇，浓得像一杯化不开的咖啡。</p></p>', '/myworld/Uploads/experiences/576126c85bdec.png', 1),
(6, '唱冷了，昨日的记号', '2016-05-30', '<p>一身白衣为你洗尽铅华，白衣白发白胜雪，捧一卷古墨，盈袭暗香，我踏着平平仄仄的长长短短，款款步入风情万种的宋词里。溪边桃红青染，流水潺潺，柳丝随风絮，我在桃花下写着红笺小字，一抹嫣然回眸，惊落了桃花，也惊落了你的心。佛说千年一轮回，今生，你在哪里？\r\n						<p>可能，遇到对的你，就想把压抑在心底话语，全部诉说；可能，遇到对的你，希望你来安抚我的心，那会舒心；可能，遇到对的你，我想把我心底话对你说，让你懂我……一切的一切，是因为遇见你。</p><p>一直觉得，若能找一静僻之地，静心，静悟，静静思考，时时看看美丽的苍穹，时而品品手中的香茗，时而挥洒手中的笔墨，时而让钢笔在纸上舞动，在配以安静的乐曲，静静的，静静的，想想白天，想想生活，想想每一个人，那就好了。</p><p>轻轻拂去岁月的尘埃，打开历久弥新的宋词，氤氲在词中的聚散离合、爱恨情仇，浓得像一杯化不开的咖啡。</p><p>一直觉得，若能找一静僻之地，静心，静悟，静静思考，时时看看美丽的苍穹，时而品品手中的香茗，时而挥洒手中的笔墨，时而让钢笔在纸上舞动，在配以安静的乐曲，静静的，静静的，想想白天，想想生活，想想每一个人，那就好了。</p><p>轻轻拂去岁月的尘埃，打开历久弥新的宋词，氤氲在词中的聚散离合、爱恨情仇，浓得像一杯化不开的咖啡。</p></p>', '/myworld/Uploads/experiences/57613863259a1.png', 1);

-- --------------------------------------------------------

--
-- 表的结构 `jk_hobby`
--

DROP TABLE IF EXISTS `jk_hobby`;
CREATE TABLE IF NOT EXISTS `jk_hobby` (
  `hid` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
  `name` varchar(30) NOT NULL DEFAULT '' COMMENT '爱好类目名称',
  `content` varchar(400) NOT NULL DEFAULT '' COMMENT '爱好简介',
  `posturl` varchar(255) NOT NULL DEFAULT '' COMMENT '海报地址',
  `posttime` int(10) UNSIGNED NOT NULL DEFAULT '0' COMMENT '上传时间',
  PRIMARY KEY (`hid`)
) ENGINE=MyISAM AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COMMENT='爱好表';

--
-- 转存表中的数据 `jk_hobby`
--

INSERT INTO `jk_hobby` (`hid`, `name`, `content`, `posturl`, `posttime`) VALUES
(1, 'NBA', '美国职业篮球联赛（National Basketball Association，简称NBA，中文简称“美职篮”）于1946年6月6日在纽约成立，是由北美三十支队伍组成的男子职业篮球联盟，美国四大职业体育联盟之一。汇集了全世界最顶级的球员，是世界上水平最高的篮球赛事。', '/myworld/Uploads/hobbies/nba.jpg', 0),
(2, '音乐', '我非常热爱音乐。正因为我热爱音乐，我试图让它脱离使它受到抑制的贫乏的传统。音乐是热情洋溢的自由艺术，是室外的艺术，象自然那样无边无际，象风，象天空，象海洋。绝不能把音乐关在屋子里，成为学院派艺术。', '/myworld/Uploads/hobbies/musics.jpg', 0),
(3, '功夫', '李小龙，原名李振藩，1940年出生于美国加州旧金山，祖籍中国广东顺德均安镇。他是世界武道变革先驱者、武术技击家、武术哲学家、UFC开创者、MMA之父、武术宗师、功夫片的开创者和截拳道创始人、华人武打电影演员，中国功夫首位全球推广者、好莱坞首位华人演员。他在香港的四部半电影3次打破多项记录，其中《猛龙过江》打破了亚洲电影票房记录，与好莱坞合作的《龙争虎斗》全球总票房达2.3亿美元。', '/myworld/Uploads/hobbies/kungfu.jpg', 0),
(4, '综艺', '《奔跑吧兄弟第四季》是浙江卫视引进韩国SBS电视台综艺节目《Running Man》推出的大型户外竞技真人秀节目，由浙江卫视节目中心制作。', '/myworld/Uploads/hobbies/Variety shows.jpg', 0),
(5, '电影', '《美人鱼》是由周星驰执导，由江玉仪监制的喜剧爱情片，邓超、罗志祥、张雨绮、林允等领衔出演。该片讲述了富豪刘轩和为了拯救同族前往刺杀他的美人鱼珊珊坠入爱河，谱写了一段人鱼爱情童话的故事。', '/myworld/Uploads/hobbies/films.jpg', 0);

-- --------------------------------------------------------

--
-- 表的结构 `jk_info`
--

DROP TABLE IF EXISTS `jk_info`;
CREATE TABLE IF NOT EXISTS `jk_info` (
  `infoid` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
  `sex` tinyint(1) UNSIGNED NOT NULL DEFAULT '0' COMMENT '性别，0男，1女',
  `birthday` date NOT NULL DEFAULT '1970-01-01' COMMENT '生日',
  `constellation` varchar(12) NOT NULL DEFAULT '' COMMENT '星座',
  `animalsign` varchar(4) NOT NULL DEFAULT '' COMMENT '属相',
  `hometown` varchar(128) NOT NULL DEFAULT '' COMMENT '故乡',
  `address` varchar(128) NOT NULL DEFAULT '' COMMENT '现居地址',
  `zipcode` varchar(10) NOT NULL DEFAULT '' COMMENT '邮政编码',
  `introduce` varchar(255) NOT NULL DEFAULT '' COMMENT '自我介绍',
  `dream` varchar(255) NOT NULL DEFAULT '' COMMENT '近期梦想',
  `career` varchar(128) NOT NULL DEFAULT '' COMMENT '职业',
  `degree` varchar(128) NOT NULL DEFAULT '' COMMENT '学位',
  `ismarried` tinyint(1) UNSIGNED NOT NULL DEFAULT '0' COMMENT '0未婚，1已婚',
  `majortag` varchar(128) NOT NULL DEFAULT '' COMMENT '专业特长，标签',
  `qq` varchar(15) NOT NULL DEFAULT '' COMMENT 'qq号码',
  `telephone` varchar(24) NOT NULL DEFAULT '' COMMENT '固定电话',
  `indexname` varchar(32) NOT NULL DEFAULT '' COMMENT '我的主页名称',
  `motto` varchar(128) NOT NULL DEFAULT '' COMMENT '座右铭',
  `like` varchar(255) NOT NULL DEFAULT '' COMMENT '兴趣爱好',
  `sports` varchar(255) NOT NULL DEFAULT '' COMMENT '喜欢的运动',
  `musics` varchar(255) NOT NULL DEFAULT '' COMMENT '喜欢的音乐',
  `films` varchar(255) NOT NULL DEFAULT '' COMMENT '喜欢的电影',
  `books` varchar(255) NOT NULL DEFAULT '' COMMENT '喜欢的书籍',
  `superstars` varchar(255) NOT NULL DEFAULT '' COMMENT '喜欢的明星',
  `college_life` text NOT NULL COMMENT '大学经历',
  `senior_life` text NOT NULL COMMENT '高中生活',
  `middle_life` text NOT NULL COMMENT '初中经历',
  `photoUrl` varchar(255) NOT NULL DEFAULT '' COMMENT '个人照片地址',
  `contactaddress` varchar(255) NOT NULL DEFAULT '' COMMENT '联系地址',
  `adid` int(10) UNSIGNED NOT NULL DEFAULT '1' COMMENT '对应管理员id',
  PRIMARY KEY (`infoid`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='用户信息表';

--
-- 转存表中的数据 `jk_info`
--

INSERT INTO `jk_info` (`infoid`, `sex`, `birthday`, `constellation`, `animalsign`, `hometown`, `address`, `zipcode`, `introduce`, `dream`, `career`, `degree`, `ismarried`, `majortag`, `qq`, `telephone`, `indexname`, `motto`, `like`, `sports`, `musics`, `films`, `books`, `superstars`, `college_life`, `senior_life`, `middle_life`, `photoUrl`, `contactaddress`, `adid`) VALUES
(1, 0, '1995-06-06', '巨蟹座', '猪', '浙江省,衢州市,衢江区', '浙江省,杭州市,西湖区', '310023', '热爱互联网行业，关注行业动态。学习能力强，对新事物充满好奇，对待有兴趣的比较执着，积极进取，勇于挑战。为人可靠实在，真诚待人，工作态度认真负责，具有团队合作精神。', '热爱互联网行业，关注行业动态。学习能力强，对新事物充满好奇，对待有兴趣的比较执着，积极进取，勇于挑战。为人可靠实在，真诚待人，工作态度认真负责，具有团队合作精神。', '计算机互联网IT', '本科', 0, 'HTML5，Web前端，Java开发，PHP工程师，Android开发', '	597634713', '	0571-85290000', '清风轩', '我是一只小小鸟，想要飞，却怎么也飞不高，哎嘛呀，干哈呀，找抽捏！！！', '喜欢运动，没事健健身，打篮球，看电影，听音乐，空闲时喜欢钓钓鱼，兜兜风。', '打篮球，打乒乓球，健身，登登山', '周杰伦的歌，有些情歌，小清新一点的歌', '看动作喜剧片，青春爱情片，警匪片。。。', '武术方面的书，名人传记，名著之类的', '李小龙，成龙，科比，詹姆斯，胡歌，霍建华，刘诗诗，张钧甯等', '1.每天回家后，做作业之前将今天所学的知识在脑子里过一遍；<br>\r\n						  2.认真完成每一道练习，不求多但求效率高；<br>\r\n						  3.一章节结束后，将整章的知识体系梳理一下，并做适当的练习巩固巩固；<br>\r\n						  4.有问题及时解决，若不好意思问老师可以找同学帮忙；<br>\r\n						  5.要学会温故而知新，不能学了后面忘了前面；<br>\r\n						  6.课外辅导书不要买得太多，各科选1~2本精做即可；', '1.每天回家后，做作业之前将今天所学的知识在脑子里过一遍；<br>\r\n						  2.认真完成每一道练习，不求多但求效率高；<br>\r\n						  3.一章节结束后，将整章的知识体系梳理一下，并做适当的练习巩固巩固；<br>\r\n						  4.有问题及时解决，若不好意思问老师可以找同学帮忙；<br>\r\n						  5.要学会温故而知新，不能学了后面忘了前面；<br>\r\n						  6.课外辅导书不要买得太多，各科选1~2本精做即可；', '1.每天回家后，做作业之前将今天所学的知识在脑子里过一遍；<br>\r\n						  2.认真完成每一道练习，不求多但求效率高；<br>\r\n						  3.一章节结束后，将整章的知识体系梳理一下，并做适当的练习巩固巩固；<br>\r\n						  4.有问题及时解决，若不好意思问老师可以找同学帮忙；<br>\r\n						  5.要学会温故而知新，不能学了后面忘了前面；<br>\r\n						  6.课外辅导书不要买得太多，各科选1~2本精做即可；', '/myworld/Public/images/myPhoto.jpg', '浙江省杭州市西湖区留和路288号', 1),
(2, 0, '2016-06-14', '双子座', '兔', '河南省,安阳,安阳市', '甘肃省,白银,白银市', '310023', 'ad ', 'ad ', '阿迪斯', '本科', 0, '娃上学a', '597634713', '11', 'd waq ', 'ad ', '阿大', '阿大', '阿大', '阿大', '阿大', '阿大', '阿大', '阿大', '阿大', '/myworld/Uploads/images/575ef46c6f303.jpg', '0571-85290110', 3);

-- --------------------------------------------------------

--
-- 表的结构 `jk_picture`
--

DROP TABLE IF EXISTS `jk_picture`;
CREATE TABLE IF NOT EXISTS `jk_picture` (
  `pid` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
  `pname` varchar(128) NOT NULL DEFAULT '' COMMENT '图片名称',
  `pUrl` varchar(255) NOT NULL DEFAULT '' COMMENT '图片url地址',
  `posttime` int(10) UNSIGNED NOT NULL DEFAULT '0' COMMENT '上传时间',
  `postip` varchar(30) NOT NULL DEFAULT '' COMMENT '上传的ip',
  `where` varchar(45) NOT NULL DEFAULT '' COMMENT '属于哪里',
  `hid` int(10) UNSIGNED NOT NULL COMMENT '所属爱好id',
  PRIMARY KEY (`pid`),
  KEY `fk_jk_picture_jk_hobby1_idx` (`hid`)
) ENGINE=MyISAM AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COMMENT='图片表';

--
-- 转存表中的数据 `jk_picture`
--

INSERT INTO `jk_picture` (`pid`, `pname`, `pUrl`, `posttime`, `postip`, `where`, `hid`) VALUES
(1, '极限挑战II', '/myworld/Uploads/hobbies/images/show01.jpg', 0, '127.0.0.1', '', 4),
(2, '王牌对王牌', '/myworld/Uploads/hobbies/images/show02.jpg', 0, '127.0.0.1', '', 4),
(3, '奔跑吧，兄弟4', '/myworld/Uploads/hobbies/images/show03.jpg', 0, '127.0.0.1', '', 4),
(4, '来吧，冠军', '/myworld/Uploads/hobbies/images/show04.jpg', 0, '127.0.0.1', '', 4),
(5, '快乐大本营', '/myworld/Uploads/hobbies/images/show05.jpg', 0, '127.0.0.1', '', 4),
(8, '天天向上', '/myworld/Uploads/hobbies/images/show08.jpg', 0, '127.0.0.1', '', 4),
(9, '极速前进', '/myworld/Uploads/hobbies/images/show09.jpg', 0, '127.0.0.1', '', 4),
(10, '跨界歌王', '/myworld/Uploads/hobbies/images/show10.jpg', 0, '127.0.0.1', '', 4),
(11, '我想和你唱', '/myworld/Uploads/hobbies/images/show11.jpg', 0, '127.0.0.1', '', 4),
(12, '娜就这么说', '/myworld/Uploads/hobbies/images/show12.jpg', 0, '127.0.0.1', '', 4),
(6, '二十四小时', '/myworld/Uploads/hobbies/images/show06.jpg', 0, '127.0.0.1', '', 4),
(7, '火星情报局', '/myworld/Uploads/hobbies/images/show07.jpg', 0, '127.0.0.1', '', 4);

-- --------------------------------------------------------

--
-- 表的结构 `jk_user`
--

DROP TABLE IF EXISTS `jk_user`;
CREATE TABLE IF NOT EXISTS `jk_user` (
  `uid` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键',
  `username` varchar(48) NOT NULL DEFAULT '' COMMENT '用户名',
  `email` varchar(128) NOT NULL DEFAULT '' COMMENT '用户邮箱',
  `mobile` char(11) NOT NULL DEFAULT '' COMMENT '手机号码',
  `password` char(32) NOT NULL DEFAULT '' COMMENT '用户密码',
  `regtime` int(10) UNSIGNED NOT NULL DEFAULT '0' COMMENT '注册时间',
  `regip` varchar(30) NOT NULL DEFAULT '' COMMENT '注册时的ip',
  `lastdate` int(10) UNSIGNED NOT NULL DEFAULT '0' COMMENT '最后一次登录时间',
  `lastip` varchar(30) NOT NULL DEFAULT '' COMMENT '最后一次登录的ip',
  `islock` tinyint(1) UNSIGNED NOT NULL DEFAULT '0' COMMENT '是否锁定，1锁定，0未锁定',
  PRIMARY KEY (`uid`),
  UNIQUE KEY `username_UNIQUE` (`username`),
  UNIQUE KEY `email_UNIQUE` (`email`),
  UNIQUE KEY `mobile_UNIQUE` (`mobile`)
) ENGINE=MyISAM AUTO_INCREMENT=41 DEFAULT CHARSET=utf8 COMMENT='用户表';

--
-- 转存表中的数据 `jk_user`
--

INSERT INTO `jk_user` (`uid`, `username`, `email`, `mobile`, `password`, `regtime`, `regip`, `lastdate`, `lastip`, `islock`) VALUES
(2, '谢群', '5@qq.com', '15757116581', 'e10adc3949ba59abbe56e057f20f883e', 1461861914, '127.0.0.1', 1466131005, '127.0.0.1', 0),
(3, '章晓原', '1@qq.com', '15382349754', 'e10adc3949ba59abbe56e057f20f883e', 1461861915, '127.0.0.1', 1466062213, '0.0.0.0', 0),
(4, '汪敏杰', '2@qq.com', '15382347887', 'e10adc3949ba59abbe56e057f20f883e', 1461861916, '127.0.0.1', 1466122505, '127.0.0.1', 0),
(5, '罗嘉辉', '3@qq.com', '15382347888', 'e10adc3949ba59abbe56e057f20f883e', 1461861917, '127.0.0.1', 0, '', 0),
(6, '刘晗', '4@qq.com', '15382347889', 'e10adc3949ba59abbe56e057f20f883e', 1461861918, '127.0.0.1', 0, '', 0),
(7, '韩宁', '7@qq.com', '15382347890', 'e10adc3949ba59abbe56e057f20f883e', 1461861919, '127.0.0.1', 0, '', 0),
(8, '陆凌霄', '8@qq.com', '15382347891', 'e10adc3949ba59abbe56e057f20f883e', 1461861920, '127.0.0.1', 0, '', 0),
(9, '戴航', '9@qq.com', '15382347892', 'e10adc3949ba59abbe56e057f20f883e', 1461861921, '127.0.0.1', 0, '', 0),
(10, '徐晓康', '10@qq.com', '15382347893', 'e10adc3949ba59abbe56e057f20f883e', 1461861922, '127.0.0.1', 0, '', 0),
(11, '刘是', '11@qq.com', '15382347894', 'e10adc3949ba59abbe56e057f20f883e', 1461861923, '127.0.0.1', 0, '', 0),
(12, '留俊', '12@qq.com', '15382347895', 'e10adc3949ba59abbe56e057f20f883e', 1461861924, '127.0.0.1', 0, '', 0),
(13, '刘汉八', '13@qq.com', '15382347896', 'e10adc3949ba59abbe56e057f20f883e', 1461861925, '127.0.0.1', 0, '', 0),
(14, '李修缘', '14@qq.com', '15382347897', 'e10adc3949ba59abbe56e057f20f883e', 1461861926, '127.0.0.1', 0, '', 0),
(15, '刘晓双', '15@qq.com', '15382347898', 'e10adc3949ba59abbe56e057f20f883e', 1461861927, '127.0.0.1', 0, '', 0),
(16, '额昂巴丹', '16@qq.com', '15382347899', 'e10adc3949ba59abbe56e057f20f883e', 1461861928, '127.0.0.1', 0, '', 0),
(17, '阿拉丁', '17@qq.com', '15382347900', 'e10adc3949ba59abbe56e057f20f883e', 1461861930, '127.0.0.1', 0, '', 0),
(18, '李小璐', '18@qq.com', '15382347901', 'e10adc3949ba59abbe56e057f20f883e', 1461861931, '127.0.0.1', 0, '', 0),
(19, '鹿晗', '19@qq.com', '15382347902', 'e10adc3949ba59abbe56e057f20f883e', 1461861932, '127.0.0.1', 0, '', 0),
(20, '吴亦凡', '20@qq.com', '15382347903', 'e10adc3949ba59abbe56e057f20f883e', 1461861932, '127.0.0.1', 0, '', 0),
(21, '黄子韬', '21@qq.com', '15382347904', 'e10adc3949ba59abbe56e057f20f883e', 1461861933, '127.0.0.1', 0, '', 0),
(22, '张艺兴', '22@qq.com', '15382347905', 'e10adc3949ba59abbe56e057f20f883e', 1461861934, '127.0.0.1', 0, '', 0),
(23, '张飞', '23@qq.com', '15382347906', 'e10adc3949ba59abbe56e057f20f883e', 1461861935, '127.0.0.1', 0, '', 0),
(24, '周五', '24@qq.com', '15382347907', 'e10adc3949ba59abbe56e057f20f883e', 1461861936, '127.0.0.1', 0, '', 0),
(25, '周六', '25@qq.com', '15382347908', 'e10adc3949ba59abbe56e057f20f883e', 1461861937, '127.0.0.1', 0, '', 0),
(26, '周期', '26@qq.com', '15382347909', 'e10adc3949ba59abbe56e057f20f883e', 1461861938, '127.0.0.1', 0, '', 0),
(27, '周八', '27@qq.com', '15382347910', 'e10adc3949ba59abbe56e057f20f883e', 1461861939, '127.0.0.1', 0, '', 0),
(28, '周九', '28@qq.com', '15382347911', 'e10adc3949ba59abbe56e057f20f883e', 1461861940, '127.0.0.1', 0, '', 0),
(29, '周时', '29@qq.com', '15382347912', 'e10adc3949ba59abbe56e057f20f883e', 1461861941, '127.0.0.1', 0, '', 0),
(30, '周华键', '30@qq.com', '15382347913', 'e10adc3949ba59abbe56e057f20f883e', 1461861942, '127.0.0.1', 0, '', 0),
(31, '皮皮', '31@qq.com', '15382347914', 'e10adc3949ba59abbe56e057f20f883e', 1461861943, '127.0.0.1', 0, '', 0),
(32, '皮包骨头', '32@qq.com', '15382347915', 'e10adc3949ba59abbe56e057f20f883e', 1461861944, '127.0.0.1', 0, '', 0),
(33, '皮具', '33@qq.com', '15382347916', 'e10adc3949ba59abbe56e057f20f883e', 1461861945, '127.0.0.1', 0, '', 0),
(34, '啤酒哦', '34@qq.com', '15382347917', 'e10adc3949ba59abbe56e057f20f883e', 1461861946, '127.0.0.1', 0, '', 0),
(35, '黄酒', '35@qq.com', '15382347918', 'e10adc3949ba59abbe56e057f20f883e', 1461861947, '127.0.0.1', 0, '', 0),
(36, '愧疚', '36@qq.com', '15382347919', 'e10adc3949ba59abbe56e057f20f883e', 1461861948, '127.0.0.1', 0, '', 0),
(37, '汉化', '37@qq.com', '15382347920', 'e10adc3949ba59abbe56e057f20f883e', 1461861949, '127.0.0.1', 0, '', 0),
(38, '哈安', '38@qq.com', '15382347921', 'e10adc3949ba59abbe56e057f20f883e', 1461861950, '127.0.0.1', 0, '', 0),
(39, '哈哈是', '39@qq.com', '15382347922', 'e10adc3949ba59abbe56e057f20f883e', 1461861951, '127.0.0.1', 0, '', 0),
(40, '嘻嘻', '40@qq.com', '15382347923', 'e10adc3949ba59abbe56e057f20f883e', 1461861952, '127.0.0.1', 0, '', 0),
(1, '清风一侠', '597634713@qq.com', '15757114444', 'e10adc3949ba59abbe56e057f20f883e', 1461861953, '127.0.0.1', 1465990821, '127.0.0.1', 0);

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
